This page is about backends available for CompanyMode.



== SlimeMode ==

A backend plugging into the slime completion mechanism.  It can
display arglists, docstrings and display the source of a completion
candidate.

The newest version can always be found at its
[http://github.com/anwyn/slime-company GitHub] repository.

There is a copy on the EmacsWiki, though it may be outdated:
Lisp:slime-company.el

A variant that is always kept compatible with the latest Slime ELPA package is available at:
http://gist.github.com/179847

The first version of this file, for use with an older Slime, can be found at:
http://common-lisp.net/pipermail/slime-devel/attachments/20090328/91ce4004/attachment.asc



== EmacsLispMode ==

=== Keyword completions ===

  (defun company-elisp-finder-keyword-backend (command &optional arg &rest ign)
    "`company-backend' for finder-keywords."
    (case command
      (prefix
       (and (require 'finder nil t)
            (or (company-grab ":group '\\(\\(\\sw\\|\\s_\\)*\\)" 1)
                (company-grab "Keywords:.*[ \t]+\\(\\(\\sw\\|\\s_\\)*\\)" 1))))
      (candidates (all-completions arg finder-known-keywords))
      (meta (cdr (assoc (intern arg) finder-known-keywords)))))

-- [[nschum]]



[:PhpCompletion]
== Php function completion ==

It fetches the list of functions from php.net if it's not fetched already, so it does not need a static completion list, only an internet connections:

<pre>
(defun my-php ()
  (add-to-list 'company-backends 'company-my-php-backend))

(add-hook 'php-mode-hook 'my-php)
 (defun company-my-php-backend (command &optional arg &rest ignored)
    (case command
      (prefix (and (eq major-mode 'php-mode)
                    (company-grab-symbol)))
      (sorted t)
      (candidates (all-completions
                   arg
                   (if (and (boundp 'my-php-symbol-hash)
                            my-php-symbol-hash)
                      my-php-symbol-hash

                     (with-temp-buffer
                          (call-process-shell-command "php -r '$all=get_defined_functions();foreach ($all[\"internal\"] as $fun) { echo $fun . \";\";};'"\
     nil t)
                       (goto-char (point-min))
                       (let ((hash (make-hash-table)))
                         (while (re-search-forward "\\([^;]+\\);" (point-max) t)
                           (puthash (match-string 1) t hash))
                         (setq my-php-symbol-hash hash))))))))
</pre>

== PredictiveMode ==

{{{
;; completionui-company-freundschaft embryo
(defun company-predictive (command &optional arg &rest ignored)
  (case command
    (prefix (let* ((text (downcase (word-at-point))))
              (set-text-properties 0 (length text) nil text)
              text))
    (candidates (predictive-complete arg))))

;;eval the below statement in a text buffer to try
;;(set (make-local-variable 'company-backends) '(company-predictive))
}}}

----
CategoryCompletion
