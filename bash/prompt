#########
#
# Build the Command Prompt
#
#########

export PROMPT_COMMAND=__prompt_command  # Func to gen PS1 after CMDs

function __prompt_command() {
    local EXITSTATUS="$?"    # This Needs to be first
    PS1=""

    # set variable identifying the chroot you work in 
    # (used in the prompt below)
    if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
    fi

    # set a fancy prompt (non-color, unless we know we "want" color)
    case "$TERM" in
	xterm-color) color_prompt=yes;;
    esac

    # uncomment for a colored prompt, if the terminal 
    # has the capability; turned
    # off by default to not distract the user: 
    # the focus in a terminal window
    # should be on the output of commands, not on the prompt
    force_color_prompt=yes

    if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	    # We have color support; assume it's compliant with Ecma-48
	    # (ISO/IEC-6429). (Lack of such support 
	    # is extremely rare, and such
	    # a case would tend to support setf rather than setaf.)
	    color_prompt=yes
	else
	    color_prompt=
	fi
    fi
    
    
    
    if [ "$color_prompt" = yes ]; then
	# Define Normal Colors
	local BLACK='\[\e[0;30m\]'
	local RED='\[\e[0;31m\]'
	local GREEN='\[\e[0;32m\]'
	local YELLOW='\[\e[0;33m\]'
	local BLUE='\[\e[0;34m\]'
	local MAGENTA='\[\e[0;35m\]'
	local CYAN='\[\e[0;36m\]'
	local WHITE='\[\e[0;37m\]'

	# Define Bold Colors
	local BBLACK='\[\e[1;30m\]'
	local BRED='\[\e[1;31m\]'
	local BGREEN='\[\e[1;32m\]'
	local BYELLOW="\[\e[1;33m\]"
	local BBLUE='\[\e[1;34m\]'
	local BMAGENTA='\[\e[1;35m\]'
	local BCYAN='\[\e[1;36m\]'
	local BWHITE='\[\e[1;37m\]'

	# Background Colors
	local On_Black='\e[40m' # Black 
	local On_Red='\e[41m' # Red 
	local On_Green='\e[42m' # Green 
	local On_Yellow='\e[43m' # Yellow 
	local On_Blue='\e[44m' # Blue 
	local On_Purple='\e[45m' # Purple 
	local On_Cyan='\e[46m' # Cyan 
	local On_White='\e[47m' # White

	# Other
	NO_COLOR='\[\e[0m\]'
	ALERT=${BWHITE}${On_Red} # Bold White on red background


	# Set Default Colors
	# User Color
	UC="${GREEN}"
	#hostname color 
	HC="${YELLOW}" 
	# Folder Color
	FC="${BLUE}"
	#regular color 
	RC="${WHITE}" 
	#default color 
	DC="${NO_COLOR}"
	
	# Root different color
	if [ $UID -eq 0 ]; then 
	    #root user color 
	    UC="${RED}"
	elif [[ ${USER} != $(logname) ]]; then 
	    UC=${BYELLOW} # User is not login user.
	else
	    UC=${GREEN}
	fi
    fi


    # Last Command Success
    if [ ${EXITSTATUS} = 0 ]; then
	#smiley
	FACE=$'\xe2\x98\xba'
	if [ "$color_prompt" = yes ]; then
            SMILE="${GREEN}${FACE} "
	else
            SMILE=":)"
	fi
    else 
	#frowney
	FACE=$'\xe2\x98\xb9'
	if [ "$color_prompt" = yes ]; then
            SMILE="${BRED}${FACE} ${EXITSTATUS}" 
	else
            SMILE=":("
	fi
    fi

    # Only Display Host info if remote login
    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
	if [ "$color_prompt" = yes ]; then
            HOSTTEXT="@${HC}\h${DC}"
	else
            HOSTTEXT="@\h"
	fi
    fi
    

    # Batter Power for Laptop
    BAT_PERCENTAGE="upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E percentage"
    BAT_STATE="upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E state"
    BAT_FULL="upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E to\ full"
    #BAT_TIME


    # Repositories
    # git
    if [ "\$(type -t __git_ps1)" ]; then 
	# if we're in a Git repo, show current branch
	if [ "$color_prompt" = yes ]; then
            BRANCH="${MAGENTA}\$(__git_ps1 '[ %s ] ')"
	else
            BRANCH="\$(__git_ps1 '[ %s ] ')"
	fi
    else
	BRANCH=""
    fi

    # subversion
    # currently disabled as I have nothing to check it with
    #REV=$(svn info 2>/dev/null | grep Revision | sed -e 's/Revision: //')
    #[ "$REV" ] || return
    #[ "$(svn st)" ] && DIRTY=' *'
    
    #subversion2
    #parse_svn_branch() { 
    #parse_svn_url | sed -e ’s#^’“$(parse_svn_repository_root)”‘##g’ | awk ‘{print “ (svn::”$1")“ }’ 
    #}
    #parse_svn_url() { 
    #svn info 2>/dev/null | sed -ne ’s#^URL: ##p' 
    #}
    #parse_svn_repository_root() { 
    #svn info 2>/dev/null | sed -ne ’s#^Repository Root: ##p' 
    #}
    
    # SRCEEN
    if [[ $TERM =~ screen ]] ; then
	SCREEN="${BCYAN}(SCREEN)${DC} "
    else
	SCREEN=""
    fi
    
    if [ "$color_prompt" = yes ]; then
	PS1="${DC}[ ${debian_chroot:+($debian_chroot)}${UC}\u${DC}${HOSTTEXT}:${FC}\w ${SCREEN}${BRANCH}${SMILE}${DC} ]${UC}\\$ ${DC}"
    else
	PS1='[ ${debian_chroot:+($debian_chroot)}\u@\h:\w\ ]\$ '
    fi
    unset color_prompt force_color_prompt


    # Options for xterm
    
    # If this is an xterm set the title to user@host:dir
    case "$TERM" in
	xterm*|rxvt*)
	    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
	    ;;
	*)
	    ;;
    esac
    
}
