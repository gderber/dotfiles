#!/bin/bash

# https://github.com/xvoland/Extract/blob/master/extract.sh

# Handy Extract Program
function extract() {
    if [ -z "$1" ]; then
	# display usage
	echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    else
	if [ -f $1 ] ; then 
	    case $1 in 
		*.tar.bz2|*.tbz2) tar xvjf "$1" ;; 
		*.tar.gz|*.tgz) tar xvzf "$1" ;; 
		*.tar.xz) tar xvJf "$1" ;;
		*.lzma) unlzma ./"$1" ;;
		*.bz2) bunzip2 -k "$1" ;; 
		*.rar) unrar x "$1" ;; 
		*.gz) gunzip -k "$1" ;; 
		*.tar) tar xvf "$1" ;; 
		*.zip) unzip "$1" ;; 
		*.Z) uncompress "$1" ;; 
		*.7z) 7z x "$1" ;; 
		*.xz) unxz ./"$1" ;;
		*.exe) cabextract ./"$1" ;;
		*) echo "'$1' cannot be extracted via >extract<" ;; 
	    esac 
	else 
	    echo "'$1' is not a valid file!" 
	fi 
    fi
}

function decToBin { echo "ibase=10; obase=2; $1" | bc; }
decTohex() { bc <<< "obase=16; $1"; }

beep () {
    echo -e -n \\a
}

hexscroll() { pv -qL 90 /dev/urandom | xxd -c $(( ($COLUMNS-10)*2/7 )); }

fuck () {
    if [ "$1" == "off" ]; then
	sudo poweroff
    else
	echo "\"fuck\" is not a recognised command"
    fi
}

up() {
     local d=""
     limit=$1
     for ((i=1 ; i <= limit ; i++))
     do
	 d=$d/..
     done
     d=$(echo $d | sed 's/^\///')
     if [ -z "$d" ]; then
	 d=..
     fi
     cd $d
}

# Inspiration: http://serverfault.com/a/5551 (but basically rewritten)
fawk() {
    USAGE="\
usage:  fawk [<awk_args>] <field_no>
        Ex: getent passwd | grep andy | fawk -F: 5
"
    if [ $# -eq 0 ]; then
	echo -e "$USAGE" >&2
	return
	#exit 1 # whoops! that would quit the shell!
    fi
    
    # bail if the *last* argument isn't a number (source:
    # http://stackoverflow.com/a/808740)
    last=${@:(-1)}
    if ! [ $last -eq $last ] &>/dev/null; then
	echo "FAWK! Last argument (awk field) must be numeric." >&2
	echo -e "$USAGE" >&2;
	return
    fi
    
    if [ $# -gt 1 ]; then
	# Source:
	# http://www.cyberciti.biz/faq/linux-unix-bsd-apple-osx-bash-get-last-argument/5F
	rest=${@:1:$(( $# - 1 ))}
    else
	rest='' # just to be sure
    fi
    awk $rest "{ print  \$$last }"
} # fawk
