I'd like to know a way to define abbreviations which start with backslash character, '\'. This would be useful in composing LaTeX files.
I have used the code snippet
<pre>
(define-abbrev-table 'text-mode-abbrev-table '(
  ("\\a" "\\alpha" nil 0)                  ; define \a to be an abbreviation for \alpha
  ("\\b" "\\beta" nil 0)                    ; and \b for \beta
  ("\\lra" "\\leftrightarrow" nil 0)    ; and \rla for \leftrightarrow
 )
)
</pre>
taken from here [https://github.com/oleg-alexandrov/olegmisc/blob/master/emacs/test_emacs/.xemacs/my-abbreviations.el]; however, this does not work!

-- Anonymous 2015-11-23 12:02 UTC


----

I'd suggest the following: Go to the buffer where you want the abbrev to work. Type ##\a## followed by ##C-x a i g## and see what it suggests. In Text Mode, it will only suggest "a" as the abbreviation because ##\## is considered to be *punctuation*, not a word constituent! Use ##C-u C-x =## to confirm it: "syntax: . 	which means: punctuation".

So, you need to change the syntax category of the backslash for the mode you're interested in. See EmacsSyntaxTable. Put the following in your InitFile and evaluate it:

{{{
(modify-syntax-entry ?\\ "w" text-mode-syntax-table)
}}}

Now you should be able to type ##\a## followed by ##C-x a i g## and type ##\alpha## as its expansion. That should work.

-- AlexSchroeder 2015-11-24 07:02 UTC

