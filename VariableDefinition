[[ja:VariableDefinition-ja]]
This pages explains when to use defcustom, when to use defvar and when to
use defconst.

Look at BufferLocalVariable for variables that have a different value
in every buffer (such as `buffer-file-name').

* Variable changed by users interactively, set in ~/.emacs, or using custom.

: Use `defcustom'.

* Variable not changed by user.

: If the variable is only used by code, use `defvar'.

* Variable not changed at all

: Use `defconst'.  Note this doesn't prevent changing the variable, it just makes the author's intention explicit.

* Development
: From the EmacsManual :

:: C-M-x (eval-defun)  treats `defvar' expressions specially.  Normally, evaluating
a `defvar' expression does nothing if the variable it defines already
has a value.  But C-M-x unconditionally resets the variable to the
initial value specified in the `defvar' expression.  `defcustom'
expressions are treated similarly.  This special feature is convenient
for debugging Lisp programs.


[new:XueFuqiao:2012-12-29 05:58 UTC]
Prior to version 24.3 of GNU Emacs, variables with DocStrings that start with an asterisk were considered possible
candidates for `M-x set-variable'. From GNU Emacs 24.3 on, docstrings starting with `*' no longer indicate user options.
Only variables defined using `defcustom' are considered user options.  -- XueFuqiao

For more recent Emacs, this would be considered a bug for code distributed by GnuEmacs: [https://debbugs.gnu.org/cgi/bugreport.cgi?bug=23392 Bug#23392 - Somebody should clean up the "*" in doc strings]. It is not a bug for user code and 3rd-party libraries that are designed to work with older Emacs versions.

----
See also NonNilValues.

----
CategoryCode CategoryCustomize
