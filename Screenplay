There are five screenplay libraries known, two of which share the same name :(

* http://www.nongnu.org/screenplay/ -- by VanceSimpson
* http://www.nongnu.org/screenwriter/ -- improved fork of VanceSimpson's screenplay.el
* Lisp:screenplay.el -- by AlexSchroeder
* RubyTwoMode -- uses emacs + python + LaTeX to give industry standard Final Draft scripts.
* FountainMode -- by PaulRankin

There is also a LaTeX Document Class called "plari" by Antti-Juhani Kaijanaho for screen plays.
You can find it on any CTAN-mirror.  

== More info on the package by Alex Schroeder ==

Type your screen play as you would on a typewriter.  When you are
done, reformat the plain text using Lisp:screenplay.el.
[Google:Screenwriter%27s+Bible+David+Trottier The Screenwriter's Bible by David Trottier] seems
to suggest that the formatting by screenplay.el is good enough.

The screen play formatter recognizes the following:

Paragraphs of text starting in column 0 are considered to be
'''description'''.  They are formatted like normal paragraphs in text
mode.  A fill-column of 65 is used.  Paragraphs are separated by an
empty line.

Paragraphs of text starting on any other column are considered to be
'''dialogue'''.  They are reformatted with a left margin of 10
characters and a fill-column of 45.  Paragraphs are separated by an
empty line.

Lines of text not starting on column zero and enclosed in parenthesis
are considered to be '''actor's instructions'''.  They are indented to
column 16.  Actor's instructions spanning multiple lines are not
recognized.  This text should go into the description.  There will be
no empty lines before or after actor's instructions.

Lines of text in all caps starting on column 0 are considered to be
'''headings''' and are left alone.  There will be two empty lines
before headings.

Lines of text in all caps starting on any other column are considered
to be '''character names''' and indented to column 22.  There will be
no empty line following a character name.

== More info on the package by VanceSimpson ==

This version formats interactively, using key bindings to define which element the user is typing.  This is what screenwriters formerly using non-free screen authoring applications would be more accustomed to.

The official set of keybindings is:

* TAB-RET prompts for a slugline (a scene heading, such as INT. CAFE - DAY)
* TAB-TAB-RET drops into an action block (also known as "scene direction", in which action is described)
* TAB-TAB-TAB-RET enters a dialog block (actors' lines)

In the event that something is accidentally mis-categorized (i.e., dialog is inadvertently entered as action) C-u can be used to define it as a different element.

== Missing Elements ==

Notably, there are a few conventions in screenplays that are considered more tradition than anything, and, though non-essential, are frequently used.  Of those, VanceSimpson's screenplay.el currently lacks:

* (CONT'D) - to indicate a character's dialog is continuous in the event that the character's lines are interrupted by an action block.

* CONTINUED: - when a scene extends beyond a page break, it is traditional to indicate that the scene is CONTINUED: at the bottom of the page.

* (Dialogue direction) - when a screenwriter wishes to specify how an actor says a line if it is not immediately obvious; this appears after the character name and before the dialogue.
** This can be manually entered but .

== Screenwriter.el ==

This is an improved fork of screenplay.el by VanceSimpson, including transitions (editor notes such as CUT TO:, FADE IN:, FADE OUT., DISSOLVE:, and so on).

It also remaps the keybindings to the simpler

* M-s prompts for a Slug line (a scene heading, such as INT. CAFE - DAY)
* M-a drops into an Action block (also known as "scene direction", in which action is described)
* M-d enters a Dialog block (actors' lines)
* M-t prompts for a Transition (CUT TO:, FADE OUT., etc)

The download also includes a set of shell scripts called screenplay-tools that will assist the screenwriter in generating an industry-standard title page, numbering pages and scenes, generating location and character reports, and printing.

----
MarkupModes
