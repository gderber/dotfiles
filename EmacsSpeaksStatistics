This page is about '''[::Emacs Speaks Statistics]''', also sometimes called EmacsStatisticalSystem, but usually called '''[::ESS]'''. As always, you can click the page heading to list all pages related to ESS.

ESS is a package that integrates various statistical software with Emacs. S, GNU R (a free implementation of S), Stata, [[Julia]], and SAS modes are all supported by ESS, making it possible to hook writing and programming in Emacs right into your stats. It's pretty slick.

* ESS: http://ESS.R-project.org/

* R: http://www.r-project.org/

Consider using the prefix "ESS" for new ESS-related pages. -- PaulJohnson

== Basic configuration options ==

 (setq ess-eval-visibly nil) ; ESS will not print the evaluated commands, also speeds up the evaluation 
 (setq ess-ask-for-ess-directory nil) ;if you don't want to be prompted each time you start an interactive R session

== Completion ==

* [[ESS-company|company-mode ESS integration]] -- [part of ESS]
* [[ESSAuto-complete|Auto-complete ESS integration]] -- [part of ESS]

* [[ESSIciclesCompletion|Icicles Completion]] -- Completion for ESS.

* [[ESSr-autoyas|Automatic YASnippets for function arguments]] -- Easy insertion and editing of arguments and values of a R function.

== Code Navigation And Inspection ==

* [[ESSdescribe-object-at-point|Describe object at point]] - [part of ESS]
* [[ESSTags-for-directory|ess-build-tags-for-directory]] - [part of ESS]

* [[https://github.com/vitoshka/imenu-anywhere|imenu-anywhere]] -- ido and helm imenu tag selection across all buffers with the same mode

* [[ESSSpeedbar|speedbar]] -- configure speed bar with ESS.


== Debugging ==

* [[http://code.google.com/p/ess-tracebug/|ess-tracebug]] -- [part of ESS]


== Tips and Tricks ==

* [[ESSShiftEnter|Configure Shift+Enter]] -- The [[key sequence]] `##S-<return>##' can launch R and send commands to R (by FelipeCsaszar)

* [[ESSToolTips|Create Tooltips to describe objects]] -- Tooltips are handy!

* [[ESSAutoParens|Automatic Brackets]] -- Configure ESS to automatically close Brackets and Parentheses (by anonymous)


* [[ESSWindowsAdvice|Configure Emacs for R in Windows]] -- Concrete advice for Emacs Users Who are Forced to use MS Windows (by PaulJohnson).

* [[EssSmartUnderscore|Smarter Ess Underscore behavior]] 

* [[ESS-smart-lessthan|Smart lessthan: when you want to leave underscore alone]]

* [[ESSRParser|Format your code with R parser]]

* [[ESSReadFromRegion|Read Table from Emacs Region]]

* ESS can also be used to send a local buffer or some lines of a local buffer on a remote host where the statistical software is available. This can be the case for SAS. Former methods seem obsolete and following this [[http://emacs.1067599.n5.nabble.com/Fwd-ess-sas-interactive-remote-td283565i20.html thread]], you should first execute the emacs-command shell and use from this buffer the usual ssh command (ssh user@remotehost) to connect to the remote host. Then, from this "***shell***" (the name is important; using emacs command ssh directly will give a different buffer name) buffer, execute the emacs-command "ess-sas-interactive", it will launch sas (with -stdio) on the remote host in an interactive mode. Then move to your local .sas buffer and use the standard ESS commands to send (on the remote host) your line, region or whole buffer, to be executed by the remote sas. Of course, the libraries and data files to be used should reside on the remote host. 
