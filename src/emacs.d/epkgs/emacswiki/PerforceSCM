[http://www.perforce.com/ Perforce] is a proprietary Software Configuration Management (SCM) system. Perforce is not FreeSoftware. You can have twenty users without paying for a licence, and they [http://www.perforce.com/purchase/perforce-open-source-faq offer licences free of charge for open source development].

There are two packages that integrate Perforce with Emacs:

* **p4.el** is [https://github.com/gareth-rees/p4.el available from GitHub]. This package is suitable for users who are familiar with Perforce and want to have the full power of the Perforce client interface (changelists, jobs, branch specifications, status, resolve, annotate and so on). This package is maintained by [http://garethrees.org/ Gareth Rees]; it is a fork of the the [http://p4el.sourceforge.net/ SourceForge version] by Rajesh Vaidheeswarran and others, which has been dormant since 2005.

* **vc-p4.el** is [https://swarm.workshop.perforce.com/files/guest/magnus_henoch/vc-p4 available from the Perforce Public Depot]. This package is suitable for users who are familiar with VersionControl in Emacs and want to work with Perforce in the same way. This integration makes all of the standard Emacs VC commands work with Perforce, and it is fully compatible with p4.el (that is, you can use both at the same time, for example if you need occasional access to the Perforce client features that don't map onto Emacs' VersionControl features). This package was originally written by [mailto:jik@kamens.brookline.ma.us Jonathan Kamens], has been contributed to by [mailto:dann@ics.uci.edu Dan Nicolaescu], and seems to be currently maintained by Magnus Henoch.

p4.el is very good, but has an undesirable [https://github.com/gareth-rees/p4.el/issues/235 interaction with TRAMP] (it doesn't support [https://github.com/gareth-rees/p4.el/issues/132 remote buffers], but its find-file hook tries to process TRAMP buffers and occasionaly causes find-file to fail). 
Here's a workaround that seems to work:
{{{
(defun p4-tramp-workaround-find-file-hook ()
    "do not let p4.el process remote TRAMP buffers"
    (when
        (and (fboundp 'tramp-tramp-file-p)
             (not (tramp-tramp-file-p buffer-file-name)))
      (p4-update-status)))

;; p4.el adds p4-update-status to find-file-hook
;; we replace it with a wrapper that filters out remote buffers.
(remove-hook 'find-file-hook 'p4-update-status)
(add-hook 'find-file-hooks 'p4-tramp-workaround-find-file-hook)
}}}

See also: Wiki:PerforceVersionControl.
----
CategoryVersionControl
