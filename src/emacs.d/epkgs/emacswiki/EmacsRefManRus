=Краткое руководство по работе с текстовым редактором Emacs и его клонами=

*This page is broken now! I'm going to fix it soon*

See http://emacs.wikispaces.com/EmacsRefManRus

==ПРЕДИСЛОВИЕ==

Emacs был одним из первых текстовых редакторов в мире и едва ли не
первым полноэкранным, позволяющим пользователю видеть сразу большую
часть текста. Он до сих пор пользуется огромной популярностью в
мире UNIX и является одним из стандартных редакторов в операционных
системах типа Linux. Однако русскому пользователю, выросшему под
крылом Microsoft, он практически не знаком, хотя существует
несколько разных вариантов Emacs'а для DOS и Windows.eEmacs 

Под названием Emacs в этом руководстве понимается некоторое
количество редакторов, с похожим интерфейсом, происходящих прямо
или косвенно от редактора ITS Emacs. В первую очередь имеется в
виду GNU Emacs и XEmacs, а также различные варианты MicroEMACS'а.

Также следует иметь в виду, что данное руководство является кратким
введением в мир Emacs'а и содержит описание базового подмножества
команд и возможностей этого замечательного редактора. За более
подробной информацией необходимо обращаться к соответствующему
руководству конкретного редактора.


==ВВЕДЕНИЕ==

Emacs -- текстовый редактор для программирования и обработки
текстов. Является одним из стандартных текстовых редакторов в Linux
и других UNIX-системах, также доступны клоны и версии практически
для типов компьютеров и операционных систем. Основные возможности
редактора обычно включают в себя:

* Несколько окон редактирования на экране.

* Несколько редактируемых файлов одновременно.

* В зависимости от версии поддержка функций форматирования 
текста, а также специальные режимы для различных языков
программирования.

Для того, чтобы эффективно использовать Emacs, нужно понять его
идеологию и освоить интерфейс.


===С чего начать===

Emacs обычно может быть запущен командой

	emacs [filename ...]

где filename -- имя файла (файлов) для редактирования. Если у вас в
наличии версия MicroEMACS, то она
может запускаться командами "me", "mg" или "uemacs".


===Как получить помощь и как закрыть Emacs===

Попробуйте нажать <F1>. Может также работать <Ctrl>-h или <ECS> h.

Для отмены любого действия в Emacs'е используется комбинация
<<<<<<< ancestor
<Ctrl>-g, а чтобы завершить работу -- <Ctrl>-g <Ctrl>-c.
=======
<Ctrl>-g, а чтобы завершить работу -- <Ctrl>-x <Ctrl>-c.
>>>>>>> other


==НЕМНОГО ИДЕОЛОГИИ==

Интерфейс Emacs'а заметно отличается от привычного пользователю
Windows интерфейса, что поначалу может отпугнуть вас. Однако,
немного поработав и привыкнув к нему, вы найдете его логичным и
удобным.

Изначально Emacs создавался программистами и для программистов,
поэтому он наилучшим образом подходит для написания программ.
Собственно говоря, GNU Emacs или XEmacs могут заменить собой
несколько IDE для разных языков программирования, а также текстовый
процессор, почтовый клиент, web-браузер и многое другое.

Редактор Emacs появился в те времена, когда о графических дисплеях
нельзя было мечтать, а единственным устройством ввода была
клавиатура. Поэтому он рассчитан в первую очередь на работу с
клавиатурой, хотя современные версии имеют развитый графический
интерфейс, систему меню, в полной мере поддерживают работу с мышью,
однако главным инструментом пользователя все-равно остается
клавиатура. Для текстового редактора это естественно.


===Экран, окна и буферы===

Практически любой вариант Emacs'а имеет схожий внешний вид и общие
принципы работы.

В Emacs'е разделены понятия представления текста и его отображения.
Текст представляется в виде буферов, отображаемых в окнах. Каждое
окно связано с буфером. Буфер может быть не связан с каким-либо
окном (и тогда он невидим в текущий момент), буфер может быть
связан с одним или несколькими окнами (в последнем случае вы можете
видеть, например, два разных фрагмента одного и того же текста).

Экран редактора разделен на две части. Внизу экрана находится
командная строка (строка сообщений, echo-area), в которой
отображаются сообщения и различные запросы. Там же вводятся команды
(в полных версиях вроде GNU Emacs). Командная строка в Emacs'е
заменяет разнообразные диалоговые окна и окна сообщений, привычные
для пользователей графических систем. Остальная часть экрана отдана
окнам, в которых производится собственно редактирование текстов.

Окно представляет собой (как и следовало ожидать) прямоугольную
область экрана, отображающую часть редактируемого текста. В нижней
части окна расположена строка статуса, показывающая важнейшую
сводную информацию о редактируемом тексте. Как правило это флаг
изменений ('*' в левой части строки статуса означает, что текст был
изменен, но не записан в файл, '%' означает, что отображаемый текст
не может быть изменен); также отображается имя буфера, связанного с
окном, имя файла, положение курсора и наличие различных
дополнительных режимов.

Собственно редактирование производится в буферах. Буфер может быть
связан с каким-либо файлом или не связан (например, временный
служебный буфер). Когда вы открываете файл для редактирования,
обычно создается новый буфер, куда загружается содержимое файла и
этот буфер связывается с текущим окном, становясь таким образом
видимым.

Может быть, это сначала покажется сложным, но поработав некоторое
время, вы поймете и оцените такое устройство редактора.

===Точка и метка===

Emacs имеет несколько непривычную схему выделения текста. В нем
есть такие понятия как "точка" и "метка".

Текущее положение курсора в тексте называется "точкой". В любом
месте текста вы можете поставить "метку" в позиции курсора (обычно
это делается при помощи сочетания клавиш Ctrl-@ или Ctrl-Space).
Весь текст между точкой и меткой будет "выделен" и может
использоваться в операциях с буфером обмена и другими. Также меткой
удобно пометить позицию в тексте для того, чтобы впоследствии
быстро вернуться к ней.

В одном буфере может быть только одна точка и одна метка.


===Клавиатура===

Emacs изначально создавался как переносимый продукт, который может
одинаково хорошо работать на разных машинах с разными терминалами.
Поэтому базовые команды подобраны таким образом, чтобы они
гарантированно работали на любом терминале с любой клавиатурой.
Более того, возможна работа с редактором через удаленный терминал.
Однако Emacs обычно вполне нормально "общается" и с обычными
клавиатурами персональных компьютеров.

Большинство команд редактора вызывается одним-двумя нажатиями
клавиш. При этом самые часто используемые команды используют
сочетания вида <Ctrl>-буква (обозначается как C-буква). Также
используются клавиши-префиксы. Во-первых, это клавиша <Meta>.
Сейчас трудно найти клавиатуру с такой клавишей. На современных
клавиатурах ее заменят <Esc>. Обозначается как M-клавиша. Как
набрать? Нажимаете клавишу <Esc> (обычно в строке статуса
появляется обозначение "M-" или "ESC"), затем букву. Также может
работать комбинация <Alt>-буква в качестве M-буква.

Большинство вариантов Emacs'а различают также строчные и заглавные
буквы в командах, тогда C-f и C-F являются разными командами
(последнюю для ясности часто обозначают как C-S-f, где "S" означает
клавишу <Shift> ).

Также существует по крайней мере еще один префикс -- это комбинация
C-x (например, для сохранения файла нужно последовательно нажать
C-x C-s).


===Универсальный аргумент===

Большинство команд в Emacs'е могут быть выполнены подряд несколько
раз. Чтобы повторить одну команду несколько раз нажмите C-u, потом
наберите число повторений и саму команду. Например:

	C-u 12 C-k

удалит 12 строк начиная с текущей строки. Иногда число повторений
используется в качестве параметра команды, как в команде установки
правой границы форматирования (C-u 65 C-x f установит правую в
колонку 65).

Во многих вариантах вместо C-x можно использовать клавишу <Meta>
или <Esc>. Но бывают ограничения (например, можно вводить только
аргументы от 0 до 9 и от -1 до -9). Таким образом, M-12 C-k также
удалит 12 строк.

Нажатие C-u без последующего числа задает количество повторений,
равное четырем. Это может быть удобно при работе с исходными
текстами. Например, C-u <Space> вставит отступ в 4 пробела, а C-u
<Backspace> удалит отступ также в 4 пробела. Обратите внимание, что
M-Space и M-Backspace имеют совершенно другое значение!


==КОМАНДЫ РЕДАКТОРА==

В этой главе описаны самые общие и распространенные команды
текстовых редакторов типа Emacs. Для каждой указаны сочетания
клавиш, обычно вызывающие эти команды. Они могут отличаться от тех,
что используются в вашей версии редактора. Обратитесь к
документации за дополнительной информацией.


===Перемещение курсора===

; /На страницу вверх/	<code>M-v	или PgUp</code>:
        Перемещает курсор на одну экранную страницу к началу файла.

; /На страницу вниз/	<code>C-v	или PgDn</code>:
        Перемещает курсор на одну экранную страницу к концу файла.

; /В начало файла/	<code>M-<	или M-Home</code>:
        Перемещает курсор в начало файла.

; /В конец файла/ 	<code>M->	или M-End</code>:
	Перемещает курсор в конец файла.

; /На символ вперед/ 	<code>C-f	или Стрелка вправо</code>:
	Перемещает курсор на один символ вправо. Перемещает курсор
	в начало следующей строки, если курсор находился в конце строки.

; /На символ назад/ 	<code>C-b	или Стрелка влево</code>:
	Перемещает курсор на один символ влево. Если курсор
	находится в начале строки, команда перемещает его в конец
	предыдущей.

; /На слово вперед/ 	<code>M-f</code>:
	Перемещает курсор в начало следующего слова.

; /На слово назад/ 	<code>M-b</code>:
	Перемещает курсор в начало предыдущего слова.

; /В начало строки/ 	<code>C-a	или Home</code>:
	Перемещает курсор в начало строки.

; /В конец строки/ 	<code>C-e	или End</code>:
	Перемещает курсор в конец строки.

; /На следующую строку/ 	<code>C-n	или Стрелка вниз</code>:
	Перемещает курсор на одну строку вниз.

; /На предыдущую строку/ 	<code>C-p	или Стрелка вверх</code>:
	Перемещает курсор на одну стоку вверх.

; /Перейти к строке/ 	<code>M-g  или M-x goto-line (GNU Emacs)</code>:
	Перейти к строке с указанным номером. Например, M-65 M-g
	переместит курсор на 65-ю строку текущего буфера.

; /К следующему абзацу/ 	<code>M-n</code>:
	Перемещает курсор на ближайший конец абзаца за позицией
	курсора.

; /К предыдущему абзацу/ 	<code>M-p</code>:
	Перемещает курсор на ближайшее начало абзаца перед позицией
	курсора.


===Удаление и вставка===

; /Удалить символ слева/ 	<code>C-h	или <- (Backspace)</code>:
	Удаляет символ, стоящий слева от курсора. Если курсор
	находится в начале строки, эта команда удаляет разрыв, объединяя
	строку с предыдущей.
	
; /Удалить символ под курсором/ 	<code>C-d	или Delete</code>:
	Удаляет символ, на котором стоит курсор. Если курсор
	находится в конце стоки, следующая строка будет присоединена в
	конец текущей.
	
; /Удалить предыдущее слово/ 	<code>M-C-h	или M-<-</code>:
	Удаляет слово слева от курсора. 

; /Удалить следующее слово/ 	<code>M-d</code>:
	Удаляет слово справа от курсора. 

; /Удалить до конца строки/ 	<code>C-k</code>:
	При использовании без аргумента эта комманда удаляет весь
	текст от текущей позиции до конца строки. Если строка пуста,
	команда удаляет пустую строку. Если перед командой задан аргумент,
	она удаляет указанное количество строк. В любом случае она помещает
	удаленный текст в буфер обмена (как правило как единый кусок
	текста,который может быть вставлен позднее).

; /Новая строка/ 	<code>C-m	или Enter</code>:
	Вставляет новую строку в текст, перемещая курсор вниз в
	начало следующе физической строки и перенося весь текст, бывший
	справа от курсора в новую строку. В режиме отступа (autoindent)
	экивалентна C-j.

; /Новая строка с отступом/ 	<code>C-j</code>:
	Вставляет новую строку в текст и делает в ней отступ,
	равный отступу в предыдущей строке.

; /Выровнять строку/ 	<code>C-i	или Tab</code>:
	Выравнивает левый край строки так, вставляя нужное число
	пробелов.

; /Вырезать блок/ 	<code>C-w	или Shift-Delete</code>:
	Удаляет все символы между точкой (позицией курсора) и
	меткой, поставленной командой C-Space, помещая удаленный текст в
	буфер обмена.
	
; /Копировать блок/ 	<code>M-w	или Ctrl-Insert</code>:
	Удаляет все символы между точкой (позицией курсора) и
	меткой, поставленной командой C-Space, помещая удаленный текст в
	буфер обмена.

; /Вставить строку/ 	<code>C-o</code>:
	Вставляет новую стоку в позиции курсора, но не перемещает
	курсор.


===Поиск===

; /Поиск вперед/ 	<code>C-x s (eEmacs) или C-s Enter (GNU Emacs) или C-s (MicroEMACS)</code>:
	Поиск строки начиная с текущей позиции курсора до конца
	файла. Строка для поиска вводится в командной строке внизу экрана
	и заканчивается нажатием <Enter>. Специальные символы могут быть
	вставлены при помощи C-q с последующим нажатием нужной
	<Ctrl>-клавиши. После удачного поиска в следующий раз нажатие
	<Enter> в пустой строке запроса вызывает поиск по последнему
	введенному значению строки поиска.
	
; /Поиск назад/ 	<code>C-x r (eEmacs) или C-r Enter (GNU Emacs) или C-r (MicroEMACS)</code>:
	Эта команда осуществляет обратный поиск в файле (от позиции
	курсора к началу). Все остальное см. предыдущую команду.

; /Наращиваемый поиск/ 	<code>C-s (C-s s в MicroEMACS)</code>:
	Наращиваемый поиск. Эта команда похожа на обычный поиск, но
	она начинает поиск со ввода первого символа, находя первое
	вхождение после текущей позиции. Со вводом каждого последующего
	символа команда пытается найти ближайшее вхождение уже введенной
	строки. Для управления наращиваемым поиском существует несколько
	управляющих символов:
	
*	*C-s*       Искать следующее вхождение строки
*	*C-r*       Вернуться к предыдущему вхождению
*	*C-h*       Удалить последний введенный символ строки и перейти
	          к предыдущему вхождению
*	*C-g*       Прервать поиск и вернуться к месту начала
*	*Enter*     Завершить поиск, остаться на последнем найденном
	          вхождении.

Всегда завершайте поиск нажатием <Enter> или C-g.

; /Наращиваемый поиск назад/ 	<code>C-r (C-x r в MicroEMACS)</code>:
	То же самое, что и предыдущая команда, но поиск производится
	в обратном направлении.


===Замена===

; /Замена строки/ 	<code>M-r (eEmacs, MicroEMACS) или M-x replace-string <Enter> (GNU Emacs)</code>:
	Данная команда позволяет заменять все вхождения одной
	строки на другую строку. Поиск и замена начинается с текущей
	позиции курсора и продолжается до конца текущего буфера. Числовой
	аргумент, заданный перед командой, ограничивает количество замен
	указанным числом.

; /Замена с подтверждением/ 	<code>M-%</code>:
	Подобно предыдущей, эта команда заменяет вхождения одной
	строки текста на другую. Однако, она позволяет вам отслеживать
	каждый шаг замены и спрашивает вас хотите ли вы заменить каждую
	найденную строку. Когда компьютер спрашивает вас, вы обычно можете
	ответить следующим образом:

*	*y*    Заменить и продолжить поиск
*	*n*    Не заменять и продолжить поиск
*	!    Заменить все оставшиеся строки без вопросов
*	*C-g*  Прервать поиск
*	.    Вернуться назад, на позицию, откуда была вызвана команда
*	?    Получить краткую подсказку

===Поиск регулярных выражений===

; /Искать рег. выражение/ 	<code>M-C-s (M-x re-search-forward <Enter> в GNU Emacs)</code>:
	Искать регулярное выражение от текущей позиции курсора до
	конца файла. Строка поиска набирается внизу экрана в командной
	строке и завершается нажатием <Enter>. Спецсимволы могут быть
	вставлены в строку при помощи C-q. После успешного поиска при
	нажатии <Enter> для поиска будет использована последняя введенная
	строка.

; /Искать рег. выр. назад/ 	<code>M-C-r (M-x re-search-backward <Enter> в GNU Emacs)</code>:
	Эта команда ищет регулярное выражение в обратном
	направлении (к началу файла). В остальном она полностью аналогична
	предыдущей.

===Замена регулярного выражения===

; /Замена с подтверждением/ 	<code>C-x %  или M-C-% (GNU Emacs)</code>:
	Подобно простой замене с подтверждением эта команда
	заменяет вхождения одной строки на другую. Однако, она позволяет
	использовать регулярные выражения для поиска. См. раздел о
	регулярных выражениях ниже. Когда компьютер спрашивает хотите ли
	вы заменить найденное выражение, вы можете ответить следующим
	образом:

*	*y*     Заменить и продолжить поиск
*	*n*     Не заменять (пропустить) и продолжить поиск
*	*u*     Отменить последнюю замену
*	!     Заменить все оставшиеся вхождения не запрашивая
	      подтверждения
*	*C-g*   Остановить выполнение команды
*	.     Вернуться к месту запуска команды
*	?     Получить краткую справку по использованию


===Изменение регистра и перестановка символов===

; /Слово заглавными буквами/ 	<code>M-u</code>:
	Меняет все буквы следующего слова на заглавные. 

; /Слово с заглавной буквы/ 	<code>M-c</code>:
	Делает следующее слово написанным с заглавной буквы.

; /Слово строчными буквами/ 	<code>M-l</code>:
	Меняет все буквы следующего слова на строчные.

; /Поменять два символа/ 	<code>C-t</code>:
	Меняет местами два символа слева от курсора.

; /Непосредственная вставка/ 	<code>C-q</code>:
	Вставляет в текст следующий нажатый символ, игнорируя тот
	факт, что он может быть управляющим.


===Выделение и буфер обмена===

; /Поставить метку/ 	<code>C-Space		или C-@</code>:
	Данная команда используется для того, чтобы отметить начало
	выделенного текста. Многие команда обрабатывают выделенные текст.
	Выделение определяется как текст между меткой и текущей позицией
	курсора (точкой). Например, чтобы удалить кусок текста можно
	поместить курсор на начало куска, поставить метку C-Space,
	переместить курсор в конец удаляемого текста и затемудалить текст
	при помощи команды удаления (C-w). Только одна метка может быть в
	одном окне или буфере в один момент времени. Emacs помнит метки,
	поставленные во всех буферах.

; /Обменять точку и метку/ 	<code>C-x C-x</code>:
	Эта команда перемещает курсор в отмеченную позицию в
	текущем буфере и ставит метку туда, где только что
	находилсякурсор. Это очень полезно для поиска метки или для
	быстого возврата в отмеченную позицию.


===Копирование и перемещение, kill ring===

; /Удалить выделение/ 	<code>C-w	или Shift-Del</code>:
	Команда используется для удаления выделенного (между меткой
	и позицией курсора) текста и помещение его в буфер обмена.
; : Эта команда полностью аналогична команде "Выезать" (Cut) в
других программах.

; /Вставить/ 	<code>C-y	или Shift-Ins</code>:
	Команда копирует содержимое буфера обмена в текущую позицию
	в тексте. Она на очищает буфер обмена, поэтому текст в нем может
	быть вставлен в текст несколько раз.
; : Совпадает с командой "Вставить" (Paste) в других
программах.

; /Копировать выделение/ 	<code>M-w	или Ctrl-Ins</code>:
	Команда копирует выделенный фрагмент текста в буфер обмена
	не удаляя его из буфера.
; : Аналогична команде "Копировать" (Copy) в других программах.

; /Вставить предыдущий фрагмент/ 	<code>M-y</code>:
	Во многих вариантах Emacs'а существует "множественный буфер
	обмена" -- Kill Ring -- представляющий собой кольцевой список из
	нескольких буферов обмена. При копировании текста в буфер обмена,
	старое его содержимое не теряется, а перемещается в следующий
	элемент этого списка и может быть использовано впоследствии.
; : Эта команда, вызванная непосредственно после команды
вставки (C-y), замещает только что вставленный текст содержимым
предыдущего буфера из списка. Если сразу после этого еще раз
нажать M-y, то текст снова будет замещен на еще более раннее
содержимое буфера обмена и так далее по кругу.

; : Данная команда может быть уподоблена поведению буфера
обмена в <nowiki>M$ Office 2000</nowiki>, где тоже можно использовать несколько
предыдущих значений буфера обмена.
	
===Откат===

; /Отменить/ 	<code>C-x u (C-/ в GNU Emacs, C-z в eEmacs)</code>:
	Отменить последнее сделанное изменение. Часто
	поддерживается многоуровневый откат -- последовательными нажатиями
	C-x u можно последовательно отменить несколько последних
	изменений.


===Форматирование текста===

Практически любой вариант Emacs'а поддерживает команды
форматирования в большем или меньшем объеме.

; /Установить правую границу/ 	<code>C-x f</code>:
	Устанавливает новое значение правой границы текста, которое
	используется в других командах форматирования. Другими словами,
	эта команда устанавливает максимальную длину строки текста.
	Значение правой границы задается при помощи универсального
	аргумента перед вызовом: C-u 72 C-x f установит длину строки в 72
	символа.

; /Выровнять строку/ 	<code>C-i или Tab</code>:
	Эта команда может присутствовать не во всех редакторах. Она
	выравнивает левую границу текущей строки, вставляя в начало
	отступ, равный отступу в предыдущей строке.
	
; : В некоторых вариантах (например, в GNU Emacs) эта команда
имеет "повышенный интеллект": в зависимости от включенных режимов
редактирования исходных текстов она выравнивает текст исходя из
синтаксических соглашений, принятых для конкретного языка
программирования.

; /Форматирование абзаца/ 	<code>M-q</code>:
	Команда берет текст текущего абзаца (ограниченного пустыми
	строками или выделенного красной строкой) и форматирует абзац по
	левому краю и правой границе, переразбивая на строки и удаляя
	лишние пробелы.
	
; /Центрирование строки/ 	<code>M-s</code>:
	Команда выравнивает текущую строку по центру, удаляя
	пробелы по краям строки и вставляя нужное количество пробелов в
	начало.

; /Показать позицию в буфере/ 	<code>C-x =</code>:
	Данная команда выдает отчет о текущей позиции в тексте
	(номер символа, общее количество символов и/или строк). Также
	выдает код символа под курсором в восьмеричном, десятичном и
	шестнадцатиричном виде.


===Множество окон===

; /Разделить текущее окно/ 	<code>C-x 2</code>:
	Если это возможно, команда делит текущее окно на два окна,
	примерно одинакового размера. В каждом из них будет отображаться
	тот же буфер, что и в исходном окне.
	
; /Удалить окно/ 	<code>C-x 0 (ноль)</code>:
	Команда пытается переключиться в следующее окно, после чего
	закрывает то, что было текущим. (В eEmacs команда закрывает _все_
	открытые окна).

; /Закрыть все остальные окна/ 	<code>C-x 1</code>:
	Все остальные окна, кроме текущего, будут закрыты. Текущее
	окно станет единственным и займет весь экран.

; /Следующее окно/ 	<code>C-x o (лат. буква "o")</code>:
	Делает следующее окно текущим.

; /Прокрутить следующее вниз/ 	<code>M-C-v</code>:
	Прокручивает следующее окно на страницу вниз.

; /Прокрутить следующее вверх/ 	<code>M-C-z</code>:
	Прокручивает следующее окно на страницу вверх.

; /Увеличить окно/ 	<code>C-x ^</code>:
	Увеличивает размер текущего окна (по умолчанию на одну
	строку).

; /Обновить/ 	<code>C-l</code>:
	Очищает экран, перерисовывает все изображение и
	прокручивает текст так, чтобы текущая строка оказалась в центре
	экрана.


===Множество буферов===

; /Выбрать буфер/ 	<code>C-x b</code>:
	Переключиться на другой буфер в текущем окне. Редактор
	попросит ввести имя буфера. Если нажать <Enter>, большинство
	редакторов переключатся на следующий из списка буферов (или
	последний использованный).

; /Следующий буфер/ 	<code>C-x x (MicroEMACS, eEmacs)</code>:
	Переключиться на следующий буфер из списка.

; /Удалить буфер/ 	<code>C-x k</code>:
	Уничтожить указанный буфер и освободить память. Эта команда
	не удаляет файл, из которого были считаны данные в буфер.

; /Список буферов/ 	<code>C-x C-b</code>:
	Команда открывает новое окно, в котором выводится список
	всех буферов, существующих в настоящий момент в редакторе. Для
	каждого буфера обычно отображается также дополнительная
	информация.
