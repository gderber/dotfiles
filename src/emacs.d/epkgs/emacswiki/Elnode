Elnode is an asynchronous HttpServer framework. You can use it to write HTTP services in EmacsLisp.

* [[http://elnode.org|the homepage]] - the video is there, as well as [[http://www.youtube.com/watch?feature=player_embedded&v=TR7DPvEi7Jg|here]]
* [[http://github.com/nicferrier/elnode|the GitHub project]]
* Nic's [[http://nic.ferrier.me.uk/blog/2012_08/elnode-nears-1-point-0|latest blog post]] on Elnode 0.9.9

http://nic.ferrier.me.uk/stuff/img//elnode-access-log-screenshot.png
//Elnode access log buffer//

== What Elnode is ==

Elnode is a non-blocking IO webserver written entirely in EmacsLisp.  It's like an EmacsLisp version of [http://nodejs.org/ node.js].

Elnode's performance is better than I expected, we can get about 5000 request per second out of it.  The limiting factor is likely Emacs async IO which uses [[http://www.gnu.org/software/libc/manual/html_node/Waiting-for-I_002fO.html#Waiting-for-I_002fO|the select function]].  Replacing that with //epoll// or some other fast equivalent would likely give us node.js like performance. 

Elnode comes with a webserver and a wiki server application.


== What is Elnode good for? ==

Elnode has been optimized for rapid development.  It's designed to get you going quickly.  Emacs is a great development environment for EmacsLisp and that's why Elnode applications are rapid and easy to build.

Some suggestions:

* Elnode can be a very useful personal webserver, it's easy to mix file serving, wiki serving and your own hacks
* Elnode can serve Emacs data, especially exciting is Emacs data that is often locked away, like diary
* Elnode can do defer processing so could also be used for writing general purpose comet apps


[:nodejs]
== What is node.js? ==

node.js is an evented IO server framework in Javascript. node.js is
not a browser thing. It is a server side thing. You write event driven
servers in it. That means you write all your code in a single process
and rely on the natural blocking of clients to give you
concurrency. Of course, a standard technique is to to spawn processes
to handle work - again, communicating asynchronously.

== Using the builtin Wiki ==

Installing the latest versions of Elnode should automatically install working Wiki and Webserver apps listening on port 8000.

The webserver, by default, serves files (with an example included) from:  <code>~/.emacs.d/elnode/public_html</code>.  Lots of stuff about the builtin webserver (including where it serves files from) can be configured with Elnode customizations:

{{{
M-x customize-group [RET] elnode [RET]
}}}

to see them all.

The Wiki server, by default, serves Wiki pages from <code>~/.emacs.d/elnode/wiki</code>.  That can be configured too. 


== An example with Elnode ==

Want to publish a directory of org-mode files? Here's a full Elnode program that defines a handler to publish org files in a directory and also starts a server on port 8002.

{{{
  ;;; server.el ---  -*- lexical-binding: t -*-
  (defvar my-org-dir "~/work/org")

  (defun my-elnode-org-handler (httpcon)
    (elnode-docroot-for my-org-dir
        with org-file
        on httpcon
        do (with-current-buffer (find-file-noselect org-file)
             (let ((org-html
                    ;; This might throw errors so you could condition-case it
                    (org-export-as-html 3 nil 'string)))
               (elnode-send-html httpcon org-html)))))

  (elnode-start 'my-elnode-org-handler :port 8002) 
}}}

Now you can visit one of those files directly.  A bit more work would be adding an index so you could pick which org-file you wanted to look at.

=== More org examples ===

Lot's of people ask for org-mode Elnode integration so NicFerrier started a specific [[https://github.com/nicferrier/elnode-org|GitHub project]] to package up some tools and utils.

== Getting Elnode ==

The latest version of Elnode is 0.9.8.

* marmalade - M-x install-package [ENTER] elnode
* [http://github.com/nicferrier/elnode Download elnode from github]
** if you do this you should build and install the package, see the [[https://github.com/nicferrier/elnode/blob/master/Makefile#L30|Makefile]]

The latest development version of Elnode is 0.9.9 and includes:

* the magic to make the webserver and the wiki work out of the box with no config
* proper child processing with async spawned child processes that communicate over Elnode servers
* fixes for other bits and pieces 

The 1.0.0 version is planned and will include:

* easy logging to processes
* heroku runnability
* a stable vagrant image
* a stable AMI for running Elnode on Amazon EC2

== Elnode and databases ==

Because database access is such an important part of web applications, [[Elnode]] includes a simple database layer.  The builtin implementation serializes Lisp objects to files.

Other database implementations are being worked on, NicFerrier is working on a MongoDb implementation and on a [[PostGreSQL]] implementation.


== Talking about Elnode ==

We talk about Elnode on #emacs, I am often there so just shout me.  Other people on #emacs know quite a lot about Elnode too.

We don't have a mailing list yet.  If you would like to provide one (ad free please) then please get in touch.

== A tutorial for Elnode ==

People asked for a tutorial, so NicFerrier has started to make one. Progress is [[https://github.com/nicferrier/elnode/blob/master/elnode_tutorial.creole|here]].

You need the latest version of Elnode to make the tutorial work.

----
CategoryExtensions
