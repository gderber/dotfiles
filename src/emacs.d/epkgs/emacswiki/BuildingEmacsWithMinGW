=== Official? ===
Here's an announcement from http://mingw.sf.net group.  I haven't tested this. -- PatrickAnderson

MinGW Community, finally there is a method for building GNU emacs with MinGW and MSYS. The caveats are, you must use the HEAD code from emacs CVS. You may need to add a date tag to the cvs checkout found in mingwPORT.beforeconfigure to get a good set of source. I tested with the source as of 2005-01-24. Also during the installation process, there is a shortcut created that contains extraneous characters in the Target and Start in text boxes. You need to right click, choose properties and remove the two characters q\ from both text boxes. 


Dependencies: 
MSYS 
msysDTK 
MinGW-3.2.0.exe 

 
Build process: 
cd emacs/port 
./mingwPORT.emacs 


Manual step: 
: Right click ``Start Menu\Programs\Gnu Emacs\Emacs'' shortcut 
: Choose Properties 
: Remove q\ from the string in the Target text box 
: Remove q\ from the string in the ``Start in'' text box 
: Click ok 
 

Good Luck and may your mileage with this script not vary.  -- http://sourceforge.net/forum/forum.php?forum_id=440305

: Here are the scripts (2kb) http://prdownloads.sf.net/mingw/emacs-cvs-mingwPORT-1.tar.bz2?download

During the process I get:

- this is during make

[Please ignore a syntax error on the next line - it is intentional]
/bin/sh.exe: -c: line 1: unexpected EOF while looking for matching `"'
/bin/sh.exe: -c: line 2: syntax error: unexpected end of file
', needed by `addsection'.  Stop.`oo-spd/i386/addsection.exe
[Please ignore a syntax error on the next line - it is intentional]
/usr/bin/sh: -c: line 1: unexpected EOF while looking for matching `"'
/usr/bin/sh: -c: line 2: syntax error: unexpected end of file
', needed by `which-sh'.  Stop.e.exe: *** No rule to make target `
[Please ignore a syntax error on the next line - it is intentional]
/usr/bin/sh: -c: line 1: unexpected EOF while looking for matching `"'
/usr/bin/sh: -c: line 2: syntax error: unexpected end of file
', needed by `which-sh'.  Stop.e.exe: *** No rule to make target `

- this is during install

[Please ignore a syntax error on the next line - it is intentional]
/usr/bin/sh: -c: line 1: unexpected EOF while looking for matching `"'
/usr/bin/sh: -c: line 2: syntax error: unexpected end of file
', needed by `which-sh'.  Stop.e.exe: *** No rule to make target `
[Please ignore a syntax error on the next line - it is intentional]
/bin/sh.exe: -c: line 1: unexpected EOF while looking for matching `"'
/bin/sh.exe: -c: line 2: syntax error: unexpected end of file
', needed by `realclean'.  Stop. `cleanall

=== Another way ===
This is another approach that should mostly work - though It's more like a history of what I did by hand... -- PatrickAnderson

For now I suggest running each command by copy/paste into a cmd.exe

If you are using EShell (you really should try it) - some things are more difficult:
: Use make.exe instead of make if(within EShell): which make
:: ''eshell/make is a compiled Lisp function in `em-unix' ''
: I can't get BATCH files to exec correctly unless I say (within EShell): cmd /c somebatch.cmd


== todo ==
check md5 sums


== code ==
<pre>
REM REM BuildingEmacsWithMinGW.bat --- w32 Emacs from STABLE, CVS, or Arch using MinGW, GNUWin32, plink + .gif support

REM Uncomment at least one SF-MIRROR
@echo off


REM REM Customizations:
set MINGW=c:\MinGW

REM New York, NY
REM set SF-MIRROR=voxel

REM Atlanta, GA
REM set SF-MIRROR=internap

REM Kent, UK
REM set SF-MIRROR=kent



REM REM Code:
set FILE-MINGW=MinGW-3.1.0-1.exe
set FILE-MSYS=MSYS-1.0.10.exe

set URL-STABLE=http://ftp.gnu.org/pub/gnu/emacs/windows
set FILE-STABLE=emacs-21.3-fullbin-i386.tar.gz

set URL-CVS=https://ccvs.cvshome.org/files/documents/19/231
set FILE-CVS=cvs-1-11-17.zip

set URL-TLA=ftp://ftp.gnu.org/gnu/gnu-arch
REM set URL-TLA=http://arch.quackerhead.com/~lord/releases/tla
set FILE-TLA=tla-1.3.tar.gz


set FILEUTILS=fileutils-4.1-8-bin.zip

set JPEG-LIB=jpeg-6b-3-lib.zip
set LIBPNG-LIB=libpng-1.2.7-lib.zip
set LIBUNGIF-LIB=libungif-4.1.0b1-lib.zip
set LIBUNGIF-SRC=libungif-4.1.0b1-src.zip
set TIFF-LIB=tiff-3.6.1-2-lib.zip
set XPM-LIB=xpm-nox-4.2.0-lib.zip
set ZLIB-LIB=zlib-1.2.1-1-lib.zip

set JPEG-BIN=jpeg-6b-3-bin.zip
set JPEG-DEP=jpeg-6b-3-dep.zip
set LIBPNG-BIN=libpng-1.2.7-bin.zip
set LIBUNGIF-BIN=libungif-4.1.0b1-bin.zip
set TIFF-BIN=tiff-3.6.1-2-bin.zip
set TIFF-DEP=tiff-3.6.1-2-dep.zip
set XPM-BIN=xpm-nox-4.2.0-bin.zip
set ZLIB-BIN=zlib-1.2.1-1-bin.zip

REM REM Todo: use md5sums

REM REM Code:
if not exist %MINGW% mkdir %MINGW%
cd %MINGW%

if not exist %FILE-MINGW% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/mingw/%FILE-MINGW%

REM Some installers allow /s for silent, that doesn't work here.
if not exist bin call %FILE-MINGW% /s

if not exist %FILE-MSYS% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/mingw/%FILE-MINGW%

if not exist bin\bash.exe call %FILE-MINGW% /s

if not exist %FILE-TLA% call wget -c %URL-TLA%/%FILE-TLA%

cd bin
if not exist cvs.exe call wget -c %URL-CVS%/%FILE-CVS%
if exist %FILE-CVS% call unzip -n %FILE-CVS% cvs.exe
REM rm %FILE-CVS%

if not exist plink.exe call wget http://the.earth.li/~sgtatham/putty/latest/x86/plink.exe
cd ..

REM REM makeinfo

REM REM cp, find, mv, rm, touch, xargs:
if not exist %FILEUTILS% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%FILEUTILS%

if not exist %JPEG-LIB% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%JPEG-LIB%
if not exist %LIBPNG-LIB% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%LIBPNG-LIB%
if not exist %LIBUNGIF-LIB% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%LIBUNGIF-LIB%
if not exist %LIBUNGIF-SRC% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%LIBUNGIF-SRC%
if not exist %TIFF-LIB% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%TIFF-LIB%
if not exist %XPM-LIB% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%XPM-LIB%
if not exist %ZLIB-LIB% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%ZLIB-LIB%

if not exist %JPEG-BIN% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%JPEG-BIN%
if not exist %JPEG-DEP% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%JPEG-DEP%
if not exist %LIBPNG-BIN% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%LIBPNG-BIN%
if not exist %LIBUNGIF-BIN% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%LIBUNGIF-BIN%
if not exist %TIFF-BIN% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%TIFF-BIN%
if not exist %TIFF-DEP% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%TIFF-DEP%
if not exist %XPM-BIN% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%XPM-BIN%
if not exist %ZLIB-BIN% call wget -c http://%SF-MIRROR%.dl.sourceforge.net/sourceforge/gnuwin32/%ZLIB-BIN%

unzip -n %FILEUTILS%

unzip -n %JPEG-LIB%
unzip -n %LIBPNG-LIB%
unzip -n %LIBUNGIF-LIB%
unzip -n %LIBUNGIF-SRC%
unzip -n %TIFF-LIB%
unzip -n %XPM-LIB%
unzip -n %ZLIB-LIB%

unzip -n %JPEG-BIN%
unzip -n %JPEG-DEP%
unzip -n %LIBPNG-BIN%
unzip -n %LIBUNGIF-BIN%
unzip -n %TIFF-BIN%
unzip -n %TIFF-DEP%
unzip -n %XPM-BIN%
unzip -n %ZLIB-BIN%

REM call rm *.zip

set PATH=%MinGW%\bin;%PATH%

REM REM STABLE:
REM wget %URL-STABLE%/%FILE-STABLE%
REM tar -xzf %FILE-STABLE%


REM REM CVS:
set PLINK_PROTOCOL=ssh
set CVS_RSH=%MinGW%\bin\plink.exe
if not exist Emacs %CVS_RSH% anoncvs@cvs.savannah.gnu.org
if not exist Emacs cvs -z3 -d:ext:anoncvs@cvs.savannah.gnu.org:/cvsroot/emacs co emacs


REM REM TLA:
REM http://www.emacswiki.org/cgi-bin/wiki/EmacsFromArch
REM tla register-archive http://sourcecontrol.net/~miles/miles@gnu.org--gnu-2004

REM merged from CVS trunk branch:
REM tla get miles@gnu.org--gnu-2004/emacs--cvs-trunk--0 emacs-arch

REM     * KarolyLorentey's multi-tty branch, which allows a single GNU Emacs process to display on multiple terminals (and in X windows) simultaneously; see MultiTTYSupport.
REM     * The "unicode" branch, which uses a unicode-based internal character encoding (an extension of utf-8) instead of the current emacs-specific coding. This branch will be the next major release of GNU Emacs (version 22). This branch is available as: 
REM tla get miles@gnu.org--gnu-2004/emacs--unicode--0 emacs-unicode

REM     * The "lexbind" branch is MilesBader's version of Emacs using lexically scoped variables in lisp. Branch: 
REM tla get miles@gnu.org--gnu-2004/emacs--lexbind--0 emacs-lexbind

REM     * The "tiling" branch allows face backgrounds to use images as well as simple colors (including, most importantly, the default face). Branch: 
REM tla get miles@gnu.org--gnu-2004/emacs--tiling--0 emacs-tiling

cd Emacs\nt

if not exist makefile call configure.bat

call make.exe bootstrap

call mingw32-make.exe

call mingw32-make.exe info

call mingw32-make.exe install

</pre>
----
BuildingCvsWThirtyTwoMingw [[EmacsW32]] BuildingOnWindowsTableofContents
