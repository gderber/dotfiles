The most important info first. Here's how to change the default font in your InitFile: use ##M-x customize-face## to customize the ##default## face.




[:InspectingAndChangingFonts]
== Inspecting and Changing Fonts ==

* Use `<code>S-down-mouse-1</code>' or `<code>M-x menu-set-font</code>' to see the font and fontset menu. Emacs starts with the startup fontset.

* Use `<code>M-x describe-font</code>' to see the requested font and actual font being used.

* See GoodFonts for some recommendations, see FontSets for how to set various fonts at the same time (one per coding system).

* Use command `doremi-font' in DoReMi to change the default font of a [[frame]] by cycling among the available fonts -- just stop when you get to the font you want. 

* Use command `icicle-font' in '''[[Icicles]]''' to do the same thing (cycle among fonts) -- but with the added benefit of [[completion]], including [[regexp]] matching.

* ChangeFontsPermanentlyOnWindows

* Use [[Anything]] command `anything-select-xfont' to narrow the font list by typing some patterns.






[:GloballyChangingFont]
=== Globally Change the Default Font ===

To change the default font for new (non special-display) frames, put either of these in your [[init file]]:

: ##(add-to-list 'default-frame-alist '(font . ## ''##FONT##'' ##))##

: ##(set-face-attribute 'default t :font ## ''##FONT##'' ##)##

To change the default font for the current frame, as well as future frames, put either of these in your init file:

: ##(set-face-attribute 'default nil :font ## ''##FONT##'' ##)##

: ##(set-frame-font  ## ''##FONT##'' ##nil t)##




where ''##FONT##'' is a string naming the font you want, for example, ##"Droid Sans Mono-10"##.

This should work on all platforms.  As of Emacs 23, all of your system fonts including %%TrueType%% are available to Emacs.

If you are using a development snapshot for what will become Emacs 24.4 then see [[http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16529|Emacs bug #16529]].

(There needs to be an explanation for how to set fonts for particular modes or buffers here. Including a set-face-attribute hook as described above for a particular mode does not work; once you enter that mode the new font is set, but it is applied <i>globally</i> to all other open buffers!)

====Global Fonts, .Xresources, and Emacs Daemon====

I found that the only way to set fonts so that they remain consistent across emacs -nw, emacs23(-gtk), emacsclient -t, emacsclient -c, was to declare them in .Xresources and .emacs. But the declarations can't conflict with each other. Otherwise, emacs --daemon complains. It doesn't like (set-face-attribute 'default nil :font FONT) and the like. For instance, to use Terminus, 9 pixel size across the board, I needed to insert

<tt>Emacs.font: Terminus-9</tt>

<tt>(set-default-font "Terminus-9")</tt>

in my ~/.Xresources and ~/.emacs, respectively.


[:ChangingGtkFonts]
== Changing the (buffer) menu fonts for GTK emacs ==

According to http://stackoverflow.com/questions/3454466/emacs23-buffer-menu-font-gtk say in ##~/.emacs.d/gtkrc##:
{{{
style "menufont"
{
  font_name = "monospace 10"  # Pango font name
}
widget "*emacs-menuitem*" style "menufont"
}}}

Using ##widget "*" ...## will change all "toolkit" fonts (menus, dialogs).

[:ChangingFontSize]
== Changing Font Size ==

You can resize (text-scale) the text in a buffer (in all windows showing it), or you can resize the default font of a frame.



[:ZoomBuffer]
=== Resize (Zoom) Buffer Text Incrementally ===

Starting with GnuEmacs 23, you can zoom the text in the current [[buffer]], in all frames displaying it:

* Vanilla Emacs: You can use `##C-x C-+##' and `C-x C--' (`text-scale-adjust') to increase or decrease the buffer text size (`##C-+##' or `C--' to repeat).  To restore the default (global) face height, type `C-x C-0'.  `S-mouse-1' pops up a menu where you can choose these same actions.

[new]
:: BUG? -- If you use a fontset with Xft, `##C-x C-+##' this does not scale the secondary font.  For example, If you use a fontset -- ##dejavu-sans-mono## for latin, ##NanumGothic_Coding## for hangul(Korean) -- , increasing the text size does not scale the Korean characters. -- [[cinsk]]
[new]



[:zoom-in-out]
[:zoom-in]
[:zoom-out]
* '''`zoom-in/out'''', '''`zoom-in'''', '''`zoom-out'''' (in <tt>[[zoom-frm.el]]</tt>) -- The first is a more general replacement for the vanilla command (`text-scale-adjust') bound by default to `##C-x C-+##', `C-x C--', `C-x C-0', and `##C-x C-=##'.  You can bind the other two to mouse-wheel rotations, so you can use the wheel like you do in a Web browser.  You can also use these same commands to zoom a frame (see [[#ZoomFrame|below]]): `C-u' for each command toggles between buffer and frame zooming.  And `C-u' while repeating toggles buffer/frame on the fly during '''`zoom-in/out''''.

* '''`doremi-buffer-font-size'''' (in <tt>[[doremi-frm.el]]</tt>) -- Change buffer font size incrementally using the arrow keys or the mouse wheel.

* <tt>[[face-remap+.el]]</tt> -- For ''all'' of the above, let buffer font resizing also zoom the [[window]] size accordingly (horizontally, vertically, or both). That way, you can take advantage of the space freed up by resizing (text-scaling) to a smaller font.

* [[GlobalTextScaleMode]] -- Adjust font size for all buffers at once using face remapping (Emacs 23+).







[:ZoomFrame]
=== Resize (Zoom) Frame Font Incrementally ===

You can use any of the following to increase or decrease the font size for the current [[frame]], effectively resizing it ''incrementally'' -- ''zooming'' the text in or out.  

* '''`zoom-in/out'''', '''`zoom-in'''', '''`zoom-out'''' (in <tt>[[zoom-frm.el]]</tt>) -- see [[#zoom-in|above]] for the descriptions.  For frame zooming these zoom all windows of the frame, and they do not affect the display in another frame of a buffer that is shown in the frame.

* '''`zoom-frm-unzoom'''' (in <tt>[[zoom-frm.el]]</tt>) -- Undo any frame zooming from `zoom-in' and `zoom-out'.

* '''`toggle-zoom-frame'''' (in <tt>[[zoom-frm.el]]</tt>) -- Alternately zoom a frame and unzoom it.

* '''`doremi-frame-font-size'''' (in <tt>[[doremi-frm.el]]</tt>) -- Change frame font size incrementally using the arrow keys or the mouse wheel.

* '''`enlarge-font'''' (in <tt>[[frame-cmds.el]]</tt>) -- Change font size by a given increment (prefix arg).

* '''`zoom-all-frames-in'''', '''`zoom-all-frames-out'''' (in <tt>[[zoom-frm.el]]</tt>) -- Incrementally zoom all frames at once, by changing the size of [[face]] `default'.

* CycleFontSizes -- Cycle a sequence of font sizes.





=== Resize Frame Font using Lisp ===

You can change the size of a font for the current frame ''non''-incrementally
using `set-face-attribute' with a ##:height## parameter:

  (set-face-attribute 'default (selected-frame) :height 100)

Alternatively, you can use `set-frame-font', `set-face-font', or `set-face-attribute' with a ##FONT## string argument that has the size you want:

  (set-frame-font
    "-outline-Courier New-normal-normal-normal-mono-11-*-*-*-c-*-iso8859-1")

  (set-face-font
    'default
    (selected-frame)
    "-outline-Courier New-normal-normal-normal-mono-11-*-*-*-c-*-iso8859-1")

  (set-face-attribute
    'default (selected-frame) :font
    "-outline-Courier New-normal-normal-normal-mono-11-*-*-*-c-*-iso8859-1")




== Installing Fonts ==

If you are running Linux, you may be able to run `xfontsel` from a shell. This program helps you select a font. Once you've found one that you like, save the specification string. In my version, clicking the "select" button near the top left copies the string to my clipboard so I can yank (paste) it into Emacs.

Either set them in your InitFile:

  (set-face-font 'menu "-jmk-neep alt-medium-r-*-*-20-*-*-*-c-*-iso8859-1")
  (set-face-font 'default "-jmk-neep alt-medium-r-*-*-20-*-*-*-c-*-iso8859-1")

Or set them in your ~/.Xresources or ~/.Xdefaults file (depending on your setup):

  *.font: -jmk-neep alt-medium-r-*-*-20-*-*-*-c-*-iso8859-1
  Emacs.pane.menubar.font: -jmk-neep alt-medium-r-*-*-20-*-*-*-c-*-iso8859-1

Actually, you may want to specify FontSets instead of a single font, if you are interested in displaying various fonts at the same time

Debian users: if your emacs startup fonts look ugly, that might be because you've installed the gsfonts-x11 package. gsfonts-x11 gives X the ability to display Ghostscript fonts, and they are poorly rendered on screen. To fix this, read the document that comes with gsfonts-x11, or [http://www.linuxtopia.org/online_books/linux_system_administration/debian_linux_guides/debian_linux_reference_guide/ch-tune.en_036.html Section 9.4.13 of the Debian Reference, "TrueType fonts in X"].

[new]
As an emacs newbie, I feel this section quite incomplete. For most people, Installing a font means two things : 
* first downloading the font from the net and copy it in the proper place,
* then select it be it from a dialog from the editor or as a line to add in a config file.

The section covers only the second point. I am quite willing to agree that emacs does thing differently for a bunch of reason, but please give me some light.
(Even to tell it is some sort of X dependency, which I suspect but that doesn't tell me what to do). 

Note that arrived here after a search on "font" which, I think, seems quite a reasonable thing to do to install a new font. I didn't see a newbie-specific page.
-- LionelB

[new]
For downloading fonts and installing them, there's nothing Emacs-specific. Emacs uses your system's fonts. If you're using Emacs with X11, then use the X11 font installation technique (xset fp etc.). If you're using Emacs with X11/Xft, then use the Xft font installation technique (.fonts.conf). If you're using Emacs with MS Windows, then use the MS Windows font installation technique (Control Panel / Fonts). If you're using Emacs with Mac, then use the Mac font installation technique (Font Book / Add Fonts).

[new]
X Logical Font Description (XLFD) python utility: https://gist.github.com/tomleo/b14a7a75e49d57c08bc1
-- TomLeo

[new:DrewAdams:2016-02-17 03:16 UTC]
: Great. How about porting it to EmacsLisp? ;-) -- DrewAdams

=== Good Pixel Fonts ===

* http://www.cl.cam.ac.uk/~mgk25/ucs-fonts.html has a few good pixel fonts that won't anti-alias and work very well in Emacs in Linux.


== Testing if fonts are available? ==

Is it possible to test if a given font is available without an error or other side-effects? I just wrote:

    (defun font-existsp (font)
      (if (string-equal (describe-font font)
                        "No matching font being used")
          nil
          t))

but it has the side-effect of opening a description in *Help* if the font exists. I'm trying to set my init files to try a series of fonts and use the first available one. (I'm using Emacs 22.1.2 on OpenBSD, fwiw.) -ScottVokes

 I figured out a simpler way:
  (defun font-existsp (font)
    (if (null (x-list-fonts font))
        nil t))

I use this:

  (member font-name (font-family-list))

-MichaelChen

Also I use this:

  (find-font (font-spec :name font-name))

And so..

  (require 'cl)
  (defun font-candidate (&rest fonts)
     "Return existing font which first match."
     (find-if (lambda (f) (find-font (font-spec :name f))) fonts))

  ;; Emacs23 style font setting.
  (set-face-attribute 'default nil :font (font-candidate '"Consolas-10:weight=normal" "DejaVu Sans Mono-10:weight=normal"))

Version using [[https://github.com/magnars/dash.el dash.el]] (call it the same way as above):

  (require 'dash)
  (defun font-candidate (&rest fonts)
    "Return the first available font."
    (--first (find-font (font-spec :name it)) fonts))

Version using loop:

  (require 'cl)
  (defun font-candidate (&rest fonts)
    (loop for font in fonts when (find-font (font-spec :name font)) return font))

== True type fonts? ==

[new]
I'd like to use <nowiki>TrueType</nowiki> Fonts in Emacs in various places, but Emacs handles them badly. Can someone tell me why TTF fonts are so much trouble in Emacs, and if there's some way I could get emacs to play nicely with them anyway? --ShaeErisson
[new]
For TTF support, see XftGnuEmacs --TimotheeBesset
[new]
As of 23.3.1 TTF support is still quite defective (on Debian at least): for example, DejaVu Sans Mono 11 is rendered at ~11.5pt, and 10pt is rendered at ~9.5pt. You'll need to set a font size of e.g. 102-108 tenths to actually get 10pt text.

[new]
: See DisplayEngineForArabic, perhaps the part about the bounding boxes for the ASCII characters being used helps? -- AlexSchroeder

[new:DrewAdams:2007-04-25 21:28 UTC]
: I use <nowiki>TrueType</nowiki> fonts with Emacs on MS Windows with no problem. In fact, you even get anti-aliasing. However, I think there appears to be a problem with Emacs 21 -- they work fine in Emacs 20 and 22, at least. -- DrewAdams


== CarbonEmacs ==

Customize the default face (##M-x customize-face RET default RET##).

Alternatively, follow the following procedure:

# M-x mac-font-panel-mode and pick the font you want.
# M-x describe-font and copy the font name (e.g. "-apple-inconsolata-medium-r-normal--13-130-72-72-m-130-iso10646-1")
# Add the following to your ##.emacs## file:

    (set-default-font
     "-apple-inconsolata-medium-r-normal--13-130-72-72-m-130-iso10646-1")


== Emacs for Mac OS X ==

M-x mac-font-panel-mode is not available on Emacs builds downloaded from http://emacsformacosx.com. On these builds, use the default Mac shortcut to popup the font panel, i.e, Command+T. Alternatively, use M-x ns-popup-font-panel. Then follow the instructions in the Carbon Emacs section.

[new]
From my personal experiences, there is no working-for-all-emacs solution for fontset.  For current Emacs 24.x (from http://emacsformacosx.com/), below script can be one of the solution:

{{{
    (when (eq system-type 'darwin)

      ;; default Latin font (e.g. Consolas)
      (set-face-attribute 'default nil :family "Consolas")

      ;; default font size (point * 10)
      ;;
      ;; WARNING!  Depending on the default font,
      ;; if the size is not supported very well, the frame will be clipped
      ;; so that the beginning of the buffer may not be visible correctly. 
      (set-face-attribute 'default nil :height 165)

      ;; use specific font for Korean charset.
      ;; if you want to use different font size for specific charset,
      ;; add :size POINT-SIZE in the font-spec.
      (set-fontset-font t 'hangul (font-spec :name "NanumGothicCoding"))

      ;; you may want to add different for other charset in this way.
      )
}}}

-- cinsk
[new]



----
CategoryDisplay
CategoryFrames
CategoryInternationalization
