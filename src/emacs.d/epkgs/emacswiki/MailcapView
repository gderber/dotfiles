I've written this little package as an experiment.  I read an article [[http://arstechnica.com/paedia/f/finder/finder-1.html]] the other day about how bad off the new Mac OS X Finder was since it wasn't "spacial" (as opposed to "special").  I'm not going to argue the merits of spacial file browsing.  What it got me thinking about was how I lived life mostly without any sort of file browser.  Do I _need_ a file browser?  I'm not sure.

What I find that I typically do is use emacs for mostly everything.  Most of what I do is program, read email, AIM/IRC, and browse the web.  I do 100% of those (except browsing the web) from within emacs.  However, occationally I have need to read some pdf, or view a jpg, or do something with some particular file that isn't a text file.  

I like how emacs allows me to guess at the file I want to open.  I start off with C-x C-f to find-file.  I start typing as much of the file's path as I know and then start tab-completing the rest.  I get a handy popup buffer for completions if what I've typed so far is ambiguous.  If I have a good memory I can type like this all the way to the file I want.  If I get "lost" along the way, I just stop at any directory level and get a dired buffer.  Now I can start seeing all the files at a glance to figure out where I am and where I want to go.

For non-text files, I didn't have anything this smooth.  I opened a term and started cd-ing around.  When I got lost, I'd stop and 'ls' or maybe 'ls -l' or 'ls -ltr'.  Then I'd resume cd-ing around till I found the directory with the file I wanted.  At that point, I'd remember the command needed to open the file and run it.  There are some variations on this.  Sometimes I'd execute M-! from within emacs if I was already in the directory where my file was.  Sometimes I'd open a dired buffer to where the file was and then run !.  Even in the best of situations, I still had to remember what program was needed to open the file.

So, I decided to get emacs to "Do The Right Thing" by opening non-text files with the appropriate program read from the appropriate mailcap.  Emacs already has an interface to the mailcap files; all I had to do was create the appropriate wrapper.  The result is Lisp:mailcap-view.el.  It has an interactive mailcap-view-file function and a mailcap-view-find-file-hook.  Both work pretty well.

-- DougAlcorn - 11 Apr 2003
