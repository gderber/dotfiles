== Anything Applications ==

Because [[Anything]] has nice narrowing and selection interface, it is common to invoke ##anything## with even single source. That's much more user-friendly than normal Emacs TabCompletion.
There are many applications utilizing Anything framework. AnythingApplication is a command containing ##anything## calls.

If you use only AnythingApplications, Lisp:anything-config.el is not needed. With Lisp:anything-match-plugin.el you can narrow candidates multiple times!

Lisp:anything-auto-install.el Integrate AutoInstall with anything.

Lisp:anything-yaoddmuse.el Integrate [[Yaoddmuse]] with anything.

Lisp:anything-emms.el Integrate [[EMMS]] with anything.

Lisp:anything-traverse.el Integrate traverselisp with anything (like grep)

Lisp:anything-mercurial.el Manage your mercurial patchs from anything (hg qpatch)

Lisp:anything-delicious.el Manage your delicious bookmarks from anything. (add, delete, update, browse, tag completion)

Lisp:anything-ipython.el Python completion with anything and Ipython.

Lisp:php-completion.el Complete everything PHP with anything.

Lisp:anything-include.el For C and C++. Anything-source made maintenance of history of #include and reusable. 

Lisp:descbinds-anything.el Yet another describe bindings with anything.

Lisp:anything-slime.el Anything-sources and some utilities for [[SlimeMode]].

Lisp:anything-R.el Anything-sources  for [[ESS]].

=== Completion ===
Lisp:anything-complete.el replaces various completion with anything (like [[Icicles]]). Use Anything power for normal completion. Lisp:anything-match-plugin.el is needed.

* `anything-lisp-complete-symbol', `anything-lisp-complete-symbol-partial-match':
    `lisp-complete-symbol' with `anything'
* `anything-apropos': `apropos' with `anything'
* `anything-complete-shell-history': complete from .*sh_history
* Many read functions:
    `anything-read-file-name', `anything-read-buffer', `anything-read-variable',
    `anything-read-command', `anything-completing-read'
* `anything-read-string-mode' replaces default read functions with anything ones.

You can add support for comint completions as follows. This works well for ESS [[EmacsSpeaksStatistics]].

<pre>
(setq anything-c-source-comint
  '((name . "Objects / functions")
    (candidates . anything-c-source-comint-completions)
    (volatile)
    (action . ac-insert)))
(setq anything-comint-sources '(anything-c-source-comint))
(defun anything-comint-dynamic-simple-complete (stub completions)
  (progn (setq anything-c-source-comint-completions completions)
         (anything-complete anything-comint-sources stub)))
(defalias 'comint-dynamic-simple-complete (symbol-function 'anything-comint-dynamic-simple-complete))
</pre>

- ts

[new:rubikitch:2009-05-30 04:04 UTC]
Thank you. But please support other comint completion methods such as file name completion. After that I'll take in your patch. -- [[rubikitch]]

[new] Lisp:anything-el-swank-fuzzy.el fuzzy symbol completion using ElSwankFuzzy.
[new] How about provide a function named `anything-el-swank-fuzzy-complete-symbol' like `slime-indent-and-complete-symbol'? It is convenience to be bind.
[new:TakeshiBanse:2009-10-27 15:37 UTC]
: Thanks for the suggestion. Updated! -- TakeshiBanse
[new] `anything-el-swank-fuzzy-complete-symbol' can not work and give "No buffer named *anything complete*". 
If execute `anything-el-swank-fuzzy-complete-variables' and then execute `anything-el-swank-fuzzy-complete-symbol'
it works.
[new:TakeshiBanse:2009-10-27 17:02 UTC]
: Sorry for the inconvenience, I'm looking into it. Thanks report. -- TakeshiBanse
:: Updated. Should fix, I believe. -- TakeshiBanse
[new] It works perfectly. Thanks for your job.
[new:TakeshiBanse:2009-10-27 17:27 UTC]
: Thank you very much for the report! -- TakeshiBanse

=== Tag Search ===
Sometimes TagsFile contains multiple entries, so selecting Search TagsFile with anything.

Lisp:anything-etags.el search ExuberantCtags / EmacsTags tag. 

Lisp:anything-yaetags.el search ExuberantCtags / EmacsTags tag another way.

Lisp:anything-gtags.el replaces [[GnuGlobal]]'s  gtags-select-mode with anything.


=== Dynamic Abbreviations ===

Lisp:anything-dabbrev-expand.el

DynamicAbbreviations with [[Anything]]. It is inspired by DabbrevExpandMultiple.

-- [[rubikitch]]


=== Kill Buffers ===
<pre>
(defun anything-kill-buffers ()
  (interactive)
  (anything
   '(((name . "Kill Buffers")
      (candidates . anything-c-buffer-list)
      (action
       ("Kill Buffer" . (lambda (candidate)
                          (kill-buffer candidate)
                          (anything-kill-buffers)
                          )))
    (candidate-transformer . anything-c-skip-boring-buffers);;skip boring buffers
    ))
   nil nil))
</pre>

-- [[k1LoW]]

[new] Note that `anything-c-source-buffers+' already do that with C-u C-z

-- ThierryVolpiatto

[new:rubikitch:2009-04-08 19:13 UTC]
Added to Lisp:anything-config.el -- [[rubikitch]]
--

----
[[Anything]]


