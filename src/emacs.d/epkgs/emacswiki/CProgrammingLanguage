Emacs supports C programming well by default since Emacs and many parts of the GNU system are written in C.  "GNU's not Unix", after all.  See TheGnuProject.

For programming in C with Emacs use CcMode.

For indenting C, see IndentingC.

For an integrated environment with advanced features use [[CEDET]].

For building indexes and running searches on definitions of C source code use EmacsTags.  The GnuGlobal is also popular.

For DebuggingWithEmacs use the GrandUnifiedDebugger.

See also:

* [http://tuhdo.github.io/c-ide.html C/C++ Development Environment for Emacs ]
* CPlusPlusMode - Built in mode for writing C++ code.
* CEldocMode -- display the arguments of C functions while programming
* CmodeAddons -- display C functions arguments when code
* Lisp:c-toggle-dot-pointer.el -- Add-on for C programming that allows toggling a variable in a function between pointer and non-pointer while simultaneously toggling between "." and "->" for pointer references in that function.
* http://davidha.wordpress.com/2009/05/15/emacs-cc-modes-built-in-styles-gallery/
* http://www.emacswiki.org/emacs/CProgrammingLanguage/zjl-hl.el -- Add-on to highlight all of the function call and local variable. I use the semantic and some additional keywords to achieve this. This zjl-hl.el needs my another package: region-list-edit.el
----
CategoryProgramming
