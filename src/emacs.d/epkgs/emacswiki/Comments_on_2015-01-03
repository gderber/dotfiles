== Elisp Files ==

''Great news!'' Thanks for all the work, Alex & Nic.

I still cannot get to the Elisp files, however. I go to ElispArea, click the `Downloading' link in the TOC, then the link `Alphabetical list of all Elisp libraries on this Wiki' (URL: http://www.emacswiki.org/emacs?action=elisp-area;context=0), and I just get (eventually): 

  504 Gateway Time-out
  
  nginx/1.4.6 (Ubuntu)

Am I not doing something I should? I closed all browser windows and cleared the browser cache as well. I'm using Google Chrome at the moment.

Thx -- DrewAdams

-- DrewAdams 2015-01-04 00:27 UTC


----

Right. We'll get to it.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-04 00:32 UTC


----

Thanks; I wasn't sure if I was missing something.

-- DrewAdams 2015-01-04 01:21 UTC


----

FYI, just in case you are not aware of it: 

At least some Elisp pages do not appear as code but as if they were HTML. E.g., http://www.emacswiki.org/emacs/palette.el.

Some other libraries show the same problem, but some appear OK. Not sure what the difference is.

HTH.

-- DrewAdams 2015-01-04 03:12 UTC


----

Hm, I have no idea why these files "lost" their formatting. When I edited the file and hit the Preview button, it looked OK, so all I did was edit the file and append a newline. Now it's back to normal. Weird.

-- AlexSchroeder 2015-01-04 09:57 UTC


----

I see. Thanks for taking a look. There are other files with the same problem. I tried to fix `bookmark+-1.el' the same way, for instance, but I got `504 Gateway Time-out' when I tried to save it. I guess I'll just need to wait a bit for this.

-- DrewAdams 2015-01-04 20:56 UTC


----

FYI - I was able to fix `bookmark+-1.el', by trying again. I guess it must be borderline wrt the timeout.

-- DrewAdams 2015-01-04 20:59 UTC


----

Hm, we should keep an eye on 504 errors just in case that's an issue between the caching proxy (nginx) and the web server (apache).

-- AlexSchroeder 2015-01-04 21:17 UTC


----

FWIW, I see it (504) pretty consistently with the larger files. E.g., I cannot update bookmark+-1.el now - clicking Edit just times out.

-- DrewAdams 2015-01-04 21:20 UTC


----

The problem is with the url that nginx is sending to Apache or Perl. 

If I do this on the server: http://internal-apache/emacs/bookmark%2b-1.el - it fails

So is this the correct url? If so why is apache/perl failing?

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-04 21:59 UTC


----

Looks like the correct URL to me. There are no errors in the Apache log. It just hangs... Weird!
The %2b is not the issue. This URL works, for example: http://www.emacswiki.org/emacs/find-func%2b.el

-- AlexSchroeder 2015-01-04 22:05 UTC


----

it's incredibly slow though. Is that expected? is that just render time for the font-lock for such a large file?

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-04 22:09 UTC


----

Once it gets cached it's fine. If you're not using caching though (because you're an editor) you're going to be pounding the server.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-04 22:10 UTC


----

It's the same thing with the other largish files, e.g. icicles-chg.el. Note too that at least once I was able to get past the timeout for bookmark+-1.el for both Edit and Save. But only once.

-- DrewAdams 2015-01-04 22:26 UTC


----

Also, FYI, I get 404 Not Found errors for pages such as http://emacswiki.org/Icicles.  (Dunno whether that is to be expected at this point.)

-- DrewAdams 2015-01-04 22:32 UTC


----

Wtf is that? surely everything is namespaced?

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-04 22:38 UTC


----

@Nic: I don't understand your question.

FYI, that is not an Elisp-file page. It is an ordinary (doc) wiki page. Same thing for other such pages, e.g., http://emacswiki.org/BookmarkPlus.

-- DrewAdams 2015-01-04 22:43 UTC


----

FYI - I just tried 3 times to save icicles-cmd2.el (another fairly large file). After two attempts with 504's, I was able to save it.

-- DrewAdams 2015-01-04 22:44 UTC


----

Are they supposed to work? My understanding is that everything is namespaced by /emacs/ (/wiki/ is a redirect to /emacs/).

So http://emacswiki.org/WikiPageName will not work but http://emacswiki.org/emacs/WikiPageName will

You are suggesting that my understanding is incorrect?

If so, I don't see many 404s matching what you're suggesting.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-04 22:45 UTC


----

They all worked previously. I have such URLs in the headers of '''all''' of my Elisp files, and they have also been referenced as such over the Web (e.g. StackOverflow) as cross-references. 

Here is a typical part of an Elisp file header, which refers to such a URL:

    ;; URL: http://www.emacswiki.org/icicles-face.el
    ;; Doc URL: http://www.emacswiki.org/Icicles

Not only that, but such URLs are used in the code itself, to consult the doc on the web (the wiki).

My understanding was that only the /cgi-bin/wiki parts of URLs (e.g. people's bookmarks, such as http://www.emacswiki.org/cgi-bin/wiki/BookmarkPlus) would no longer work, so that people would need to update their bookmarks.

-- DrewAdams 2015-01-04 22:51 UTC


----

Update:

I was able to upload most of my Elisp files, but not these (consistent timeouts): bookmark+-1.el, icicles-cmd1.el, icicles-chg.el. (Icicles & Bookmark+ are currently broken for download by users, without those first two files.)

Some of the ones I was able to upload took 3 or 4 attempts (504s, but eventually success).

Still cannot access files using http://www.emacswiki.org/*.

Thx.

-- DrewAdams 2015-01-05 01:19 UTC


----

Hm, yes, perhaps there was a rewrite rule that got lost in the migration. I'll take a look... OK, right now the problem is that the cache doesn't realize that these requests can be handed to the back-end.

-- AlexSchroeder 2015-01-05 06:39 UTC


----

As for bookmark+-1.el: I found the code painfully slow even without colorization (##http://www.emacswiki.org/emacs/raw/bookmark%2b-1.el##). Some investigation led me to the data file parser. Looking at the revision history, I found [http://git.savannah.gnu.org/cgit/oddmuse.git/commit/?id=370e15295dc3b4ff0ac405fe4a491127ff076105 the following commit] from Oct 2006:

    (ParseData): Hand-written to optimize for speed. By getting rid of
    some regular expressions used for parsing, the code is now more
    than 10x faster. This is important for default searching, and for
    indexed search using double-quotes.

Reverting to the old, regular expression based code fixes [[bookmark+-1.el]].
I'm not sure why this is so. Perhaps the newer Perl versions are better at some regular expressions.
I feel comfortable reverting this change because the drawbacks from 2006 don't affect us whether they're true or not:
the wiki no longer does searching (nor indexed search) – we're letting Duck Duck Go handle that.

So, problem fixed?

-- AlexSchroeder 2015-01-05 07:34 UTC


----

It looks like whatever you did may have broken the apache accesses munin graph

http://munin-po6.ferrier.me.uk:8080/localdomain/localhost.localdomain/index.html

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-05 14:50 UTC


----

And there's a commensurate increase in the nginx graphs at the same time.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-05 14:51 UTC


----

The URL rewriting I did affected the server-status page the munin plugin uses. I wrote an exception for server-status and Apache should be fine, now.

-- AlexSchroeder 2015-01-05 21:52 CET


----

Alex, Nic -

Thanks for all of your work. I am now able to edit pages, including uploading the 3 large Elisp files that I mentioned. I am also able to get to the alphabetical listing in the Elisp Area, although it takes a while. "Bare" URLs (with no "emacs") also work now.

Only the "/cgi-bin/wiki" pages are not recognized. That will affect some referring URLs on the web and some bookmarks, but it's not a big deal.

In sum, things are working well!

Thx - Drew

-- DrewAdams 2015-01-05 22:14 UTC


== Redirects for certain URLs ==

I'm sure we'll be able to add a redirect for those “/cgi-bin/wiki” links as well, eventually. It's a matter of principle! :)
[http://www.w3.org/Provider/Style/URI.html Cool URIs don't change], after all.

-- AlexSchroeder 2015-01-06 07:07 UTC


----

I'd really like to change the non-namespaced uris

non-namespaced uris are a nightmare because it's very hard to extend things, change architecture or even test things cleanly with them.

But that's a discussion for later I expect.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-06 18:13 UTC


----

Yeah, I think handling those URIs is a pain. But if we all agree that it's the last, catch-all rule, then that's not so bad. New namespaces will probably start with a lower case letter and won't end in ".el" so there won't be a lot of disappointment in the future.

-- AlexSchroeder 2015-01-07 06:26 UTC


----

Well, everything is editable. I am considering saying "these are deprecated and will disappear in a year".

I'd need to regularly update a list of the referrers for those pages. I bet most of them are places we could change (StackOverflow, the blog of someone we know, etc...)

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-07 08:24 UTC


----

I've been blogging since 2003... Some people will have /a lot/ of links to change. :)

-- AlexSchroeder 2015-01-07 08:39 UTC


----

FWIW: 

I don't think you will be able to change URLs in ''comments'' on StackOverflow and the other StackExchange sites (and there are several sites that have Emacs posts).  But you can change the Q's and A's (aside from their comments).

Or perhaps you can get S.E. to mechanically implement a set of global changes that you provide.

And then, as Alex says, there are the blogs.  And the email threads.  And the existing wiki pages.  And...

-- DrewAdams 2015-01-07 23:21 UTC


----

I noticed that all the edits are now from 127.0.0.1 and so our BannedHosts list of regular expressions won't be of much use.
Is there an alternative? The greatest solution would be for the caching proxy to handle this, I guess. We just need to find a way of
transferring the regular expressions from the wiki into a config file – and a way for the administrator's password to override it, just in case we lock ourselves out. Alternatively, can the caching proxy pass this information along in an environment variable? [https://rtcamp.com/tutorials/nginx/forwarding-visitors-real-ip/]

-- AlexSchroeder 2015-01-09 14:25 UTC


----

The thing to use is the X-Forwarded-For header.  Can you read that instead of the IP? A lot of web frameworks just do that for you... maybe perl/CGI doesn't?

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-09 20:32 UTC


----

Yeah, my code just looks at the environment variable. Fixed it, using your info. Thanks. :)

-- AlexSchroeder 2015-01-10 07:38 UTC


----

Awesome. Thanks Alex. I'd hoped you'd be able to step back further by now. Sorry you're still having to fix things like this.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-10 11:48 UTC


----

I'm happy to move more and more responsibility to the caching proxy and to your sysadmin skills, but I also feel responsible for a nice, smooth handover. Just installing the software is not enough. I know this! (The pain!) So no worries: I will do my best to keep things running while Oddmuse is still being used.

-- AlexSchroeder 2015-01-10 16:27 UTC


----

I don't plan to swap Oddmuse out quickly. I just don't have the time... but I can automate more of this stuff as we go.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-10 19:21 UTC


== Captcha Problems ==

Hum… I got an email 3 hours ago by a person that got an Internal Server Error when attempting to save a page. I wonder what that was all about.

-- AlexSchroeder 2015-01-11 00:17 UTC


----

Problem fixed. Captcha should work again (instead of crashing).

-- AlexSchroeder 2015-01-11 13:38 UTC

== Git ==

We're back pushing page edits to the [https://github.com/emacsmirror/emacswiki.org/commits/master git repository]. Yay!

-- AlexSchroeder 2015-01-15 08:29 UTC

== Caching Issues Leading to Wrong CSS and Wrong Language ==

A strange thing is that a new visitor, without a cookie set, seems to get a French copy of the pages. I'm assuming that's because a French copy got cached and the cache doesn't keep separate copies of each URL based on language preferences?

-- AlexSchroeder 2015-01-13 15:36 UTC


----

Site loads in Spanish for me, it should be English. I haven't seen this happen before on EmacsWiki. Running Firefox 35 on Windows 7.

-- DerekWhite 2015-01-13 19:53 UTC


----

Does this continue after clicking the appropriate language link at the top of SiteMap? If it does, then more is borked. If that fixed it (maybe a Control Shift R to reload is required), then the caching proxy is at fault. Or at least the interaction between caching proxy and wiki. I need to read up on caches and language http headers.

-- [http://alexschroeder.ch/alex/Emacs AlexSchroeder] 2015-01-13 21:22 UTC


----

I'm getting an odd thing since the server move: my theme setting isn't honored on links within the site, until I manually copy the "/?bootstrap=0;theme=typo;css=" into the URI once. From then on, I get the classic theme on all pages as I want, for the rest of the browser session. If I log out of my user account or reboot, I have to paste the theme setting again. Using Firefox 34.0.5 on Linux.

-- EdwardTrumbo 2015-01-15 11:58 UTC


----

Hm. This stuff is stored in your cookie, and Nic said that the caching proxy would pass you through if you had a cookie.
What you could do is this:
# start a new browser session
# visit the site
# you are seeing the bootstrap theme instead of your own theme
# look at the page info / security info and look at the cookie you're sending. It should say something like boostrap, 0, theme, typo separated by %251e or something like that -- if it lists no cookie, that's a problem; if it lists two cookies, then maybe that's the problem: delete all but one
# look at the page headers you received -- in this browser it goes via /examine this element/ -> /network/ -> reload page and find the right resource, click on it, /view source/ ... that should give you something like this:

{{{
HTTP/1.1 200 OK
Server: nginx/1.4.6 (Ubuntu)
Date: Thu, 15 Jan 2015 16:05:57 GMT
Content-Type: text/html; charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
Content-Location: emacs.pl
Vary: negotiate
TCN: choice
X-EmacsWiki-Source: Apache/CGI
X-Proxy-Cache: BYPASS
}}}

If you are sending a cookie and the X-Proxy-Cache header still says you're getting a hit, then that's a problem.

Let me know what you're finding! :)

-- AlexSchroeder 2015-01-15 16:08 UTC


----

I'm starting to think that perhaps the wiki should return [http://is.gd/kBbBZ0 a good value for the Vary HTTP header]. I should list ##Accept-Language##, perhaps? We would have to do some normalization, however. What a bummer. My own, hand-crafted header is ##de-CH,de;q=0.8,en-US;q=0.6,en;q=0.4,fr-CH;q=0.2,fr;q=0.2## but I guess I'm weird like that. If we /know/ that this will get parsed as ##de## for the purposes of Emacs Wiki, then that's what my header should normalize to...

-- AlexSchroeder 2015-01-15 16:16 UTC


----

Hi Alex, thanks for your help. Regarding the steps you listed, I got as far as step 4. There are no cookies listed. According to my permissions, I'm set to allow cookies from emacswiki.

I purge cookies frequently -- sometimes several times a day -- but this occurs once a day since the server move and without my manual intervention to purge cookies.

-- EdwardTrumbo 2015-01-15 18:15 UTC


----

Well, all I know is that Nic and I proposed the following: any user having a cookie will bypass the cache and get service from Apache and the wiki directly. Anybody else – readers that never edit a page, bots and spiders – will just get the cached pages. At the same time, your theme is and always has been stored in a cookie. So that's already two reasons why you're not seeing a theme: you have no cookie set, so you're getting a cached page, and even you got through to the wiki, you have no theme set because that would have been stored in the cookie. Once you visit an URL with extra parameters such as ##?bootstrap=0;theme=typo;css=## these settings will get stored in a cookie. From then on, you're both bypassing the cache and you've got a theme set in your cookie.

Does that seem plausible? If so, then there doesn't seem to be anything I can do for you directly. It is what it is. You coud, however, bookmark a page such as ##http://www.emacswiki.org/emacs/?action=rc;showedit=1;bootstrap=0;theme=typo## and that would set your cookie whenever you visited Emacs Wiki. What do you think?

-- AlexSchroeder 2015-01-15 22:04 UTC


----

I've changed the wiki to add a ##Vary: Accept-Language## header. Let's see whether that helps. My guess is that it only helps if you don't have a cookie set. Instead of getting a random language, you should get the language your browser prefers (and our caching proxy will end up caching all the pages in all the languages...).

-- AlexSchroeder 2015-01-16 13:23 UTC


----

For what it's worth, this is the second day in a row I haven't had the theme/cookie problem. I don't know what changed, but thanks for looking into this.

-- EdwardTrumbo 2015-01-17 11:09 UTC


----

This is good news!

-- AlexSchroeder 2015-01-17 12:26 UTC


----

Languages defaults to languages except English it seems.. Except when the site is cached maybe, haven't seen that yet.

Also, when I went to report this I had to add "?interface=en" to understand anything in this part, was in a language which didn't use Latin characters.

-- Anonymous 2015-01-20 12:38 UTC


----

What /should/ happen is this:

# Your browser sends the languages you prefer (instructions for changing these are [https://stackoverflow.com/questions/7769061/how-to-add-custom-accept-languages-to-chrome-for-pseudolocalization-testing here]). Look for the request ##Accept-Language## header (in my case that would be ##de-CH,de;q=0.8,en-US;q=0.6,en;q=0.4,fr-CH;q=0.2,fr;q=0.2##).

# The cache checks if it already has a version of the page cached for your language. If so, that's what you get. Look for the response header ##X-Proxy-Cache##: it should say ##BYPASS## (Apache and the Wiki served this page) or ##HIT## (nginx served this page from the cache).

If you're seeing a page and its language is random, I'd be interested in knowing what the Accept-Language and X-Proxy-Cache headers said. I'm assuming that you got a cache HIT but got served a language that didn't match your accepted languages. How strange.

-- AlexSchroeder 2015-01-20 13:49 UTC


----

Replicated! (did nothing, happened all by itself)

* http://files.progarm.org/2015-01-21-143806_928x307_scrot.png
* http://files.progarm.org/2015-01-21-143727_625x218_scrot.png
* http://files.progarm.org/2015-01-21-143741_623x212_scrot.png

Also this:

http://files.progarm.org/2015-01-21-143847_237x188_scrot.png

I don't remember setting my username to AlexSchroeder :)

Does it help?

-- AlexDaniel 2015-01-21 14:07 UTC


----

Thanks! I see two issues:

# why are you getting a hit from the proxy cache when you specified no-cache?
# why are you getting the Spanish page even though you have specified that you prefer English – and even though the wiki itself correctly specified that a separate copy must be kept for each Accept-Language setting (the Vary header).

I think NicFerrier will have to handle this. He's the one who knows how to configure nginx's proxy caching, hopefully.

-- AlexSchroeder 2015-01-21 22:32 UTC


----

I am in China and really busy. I'll fix it over the weekend maybe or when I get back. We must have changed something though because it was working.

-- [http://emacswiki.org/wiki/NicFerrier NicFerrier] 2015-01-22 19:08 UTC


----

Was it fixed? I just got it again.

-- AlexDaniel 2015-02-20 12:39 UTC


----

Well, let me remind you that it is still there:

http://files.progarm.org/2015-03-19-140706_959x663_scrot.png

Just in case you forgot.

-- AlexDaniel 2015-03-19 12:07 UTC


----

I had made a small change (the case of the wiki cookie) but apparently that didn't help. :(

-- AlexSchroeder 2015-03-21 00:07 UTC


----

It affects me, and it even affects GoogleBot! Google is displaying search results in the wrong language for some results.

-- greenrd 2015-04-05 13:11 UTC


----

Please fix this! :)

-- AlexDaniel 2015-04-16 23:27 UTC


----

The most surprising thing that I've seen so far is when you get the homepage with a different css, wow!

Alex, can you describe the cache problem in detail? Please also write about your attempts to fix it. Maybe it would be easier this way for someone to come up with a solution.

-- AlexDaniel 2015-05-30 02:24 UTC


----

The problem is this: We have installed Oddmuse as a CGI script and serve it from Apache. The output of the script varies depending on the cookie (like the CSS) and on your browser preferences (like the language). Now, requests go to an nginx web server. It is configured server pages from its cache, or to pass the request to Apache. For simplicity's sake, we decided that people who only came to Emacs Wiki in order to read can be served stale pages. Thus, if you don't have a cookie set, you get a page from the cache. If you have a username set, you get a page from Apache.

Unfortunately, we have not been able to configure nginx correctly. It should, for example, treat requests for the same URL but with a different cookie as two different pages and keep all the variants in its cache. If you see pages with the wrong CSS, then you got served a cached page from nginx that had a matching URL but was generated by a user with a different cookie.

{{{
/etc/nginx/sites-enabled/emacswiki:

proxy_cache_path /var/cache/nginx-emacswiki levels=1:2 keys_zone=emacswiki-cache:8m max_size=1000m inactive=600m;

upstream emacswiki_apache {
       server 127.0.0.1:8080 ;
}

map $args $action_bypass {
       default 0;
       "~[?;&]action=edit" 1;
}

map $request_method $http_post {
	default 0;
	"post" 1;
}

server {
        server_name www.emacswiki.org emacswiki.org po6.ferrier.me.uk;

	rewrite "^/wiki/(.*)"       "/emacs/$1" redirect;
	rewrite "^/full.rss"        "/emacs?action=rss;days=7;all=0;showedit=0;full=1" redirect;
	rewrite "^/full-diff.rss"   "/emacs?action=rss;days=7;all=0;showedit=0;full=1;diff=1" redirect;
	rewrite "^/minor-edits.rss" "/emacs?action=rss;days=7;all=0;showedit=1" redirect;
	rewrite "^/index.rss"       "/emacs?action=rss;days=7;all=0;showedit=0" redirect;

	location / {
		gzip off;
		proxy_pass http://emacswiki_apache;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_cache emacswiki-cache;
#                proxy_cache_revalidate on;
		proxy_cache_valid  200 302 1d;
		proxy_cache_valid  404 1m;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		add_header X-Proxy-Cache $upstream_cache_status;
		proxy_cache_bypass $cookie_Wiki $arg_bypass $action_bypass $http_post;
# 2015-01-10 there was a big spike in Apache activity and it turns out that someone was downloading the site (?)
# using wget. Temporary block of the IP number.
# root@po6:/var/log/nginx# perl /home/nicferrier/bin/leech-detector < access.log|head
#            IP Number       hits bandw. hits% interv. status code distrib.
#          88.71.28.41       2741    18K  11%    1.0s  200 (80%), 302 (9%), 404 (7%), 301 (2%), 501 (0%), 403 (0%), 400 (0%)

                deny 88.71.28.41;
        }

        location /robots.txt {
                root /home/nicferrier/emacswiki.org;
        }

        location /report {
                root /home/nicferrier/emacswiki-report;
                autoindex on;
        }

        location /nginx_status {
                stub_status on;
                access_log off;
                allow 127.0.0.1;
                deny all;
        }

}
}}}

Note this line:
{{{
proxy_cache_bypass $cookie_Wiki $arg_bypass $action_bypass $http_post;
}}}

The [http://www.emacswiki.org/config Oddmuse config file] is also available. Note this line:

{{{
  $header =~ s/Cache-control:.*\n/Vary: Accept-Language\n/;
}}}

A request from my browser using the Web Developer extension:

{{{
Host: www.emacswiki.org
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:38.0) Gecko/20100101 Firefox/38.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: de,en-US;q=0.7,en;q=0.3
Accept-Encoding: gzip, deflate
DNT: 1
Cookie: Wiki=pwd%251e*secret*%251eusername%251eAlexSchroeder
Connection: keep-alive
If-None-Match: 1433023829%1e5nz75g467a5b67%1eAlexSchroeder
Cache-Control: max-age=0
}}}

The response:

{{{
Connection: keep-alive
Content-Type: text/html; charset=utf-8
Date: Sat, 30 May 2015 22:13:25 GMT
Etag: 1433023829%1e5nz75g467a5b67%1eAlexSchroeder
Server: nginx/1.4.6 (Ubuntu)
Transfer-Encoding: chunked
Vary: Accept-Language
X-EmacsWiki-Source: Apache/CGI
X-Proxy-Cache: BYPASS
}}}

Notice that we got through to Apache:

{{{
X-Proxy-Cache: BYPASS
}}}

Using curl and no cookie:

{{{
$ curl -I http://www.emacswiki.org/
HTTP/1.1 200 OK
Server: nginx/1.4.6 (Ubuntu)
Date: Sat, 30 May 2015 22:18:59 GMT
Content-Type: text/html; charset=utf-8
Connection: keep-alive
Vary: Accept-Language
Etag: 1433023829%1eAlexSchroeder
X-EmacsWiki-Source: Apache/CGI
X-Proxy-Cache: HIT

}}}

No cookie was provided and the proxy cache got a hit:

{{{
X-Proxy-Cache: HIT
}}}

Furthermore, notice how this anonymous request also leaks my cookie!

{{{
Etag: 1433023829%1eAlexSchroeder
}}}

I had to clear the password from my browser session and reload the page in order to get my password out of the cookie and thus out of the Etag.
Having the cookie be part of the Etag ought to ensure that changing the cookie invalidates the cached page. This works for your local browser cache but apparently it doesn't work for nginx. What am I missing? Should Etags be listed as part of the Varies header?

-- AlexSchroeder 2015-05-30 21:59 UTC


----

I'm really sorry to bring that up again, but could this fucking problem be solved already? :)

Just a friendly complaint. I can't take it anymore… :)

-- AlexDaniel 2015-11-03 01:32 UTC


----

We had a conversation on IRC and it turns out that you can have a bookmark going to emacswiki.org (with no cookie), and follow links to www.emacswiki.org (with cookie) and what you used to see was that the language of the first page was random. I'm now redirecting all requests from emacswiki.org to www.emacswiki.org; that should fix cookie issues. If you have a cookie, you should be fine. Random visitors (and bots) without cookies will still suffer from the caching problem. That problem remains unsolved.

If anybody has more insight, feel free to contact me!

References: [http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4 Accept-Language HTTP header], [http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.44 Vary HTTP header].

-- AlexSchroeder 2015-11-06 15:11 UTC


----

While we're on topic, let me say what I *want* to happen:

# You should see the
  page *content* based on the URL and the *links* at the top and bottom of the
  page in your preferred
  language based on the *Accept-Language* header of your request. By default,
  this depends on your locale, or on the browser version you installed.

# If a user or a bot does not provide a preferred language,
  the wiki should provide the links at the top and bottom of the page in English.

# If a search engine caches pages for language X because it
  serves customers of language X, then it should use the correct header in
  its requests.

# If a search engine caches pages for *all* languages, then
  it's up to the search engine to display the correct summary based on the
  Accept-Language header of its visitors.

-- AlexSchroeder 2015-11-06 15:21 UTC


----

A new idea! Perhaps nginx doesn't care about the *Vary* header the backend is sending. And today I learned about the ##proxy_header_key## setting. As you can see, the default is inadequate!
[https://www.nginx.com/blog/nginx-caching-guide/]
[http://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_]

{{{
# proxy cache key is $scheme$proxy_host$request_uri by default
proxy_cache_key $scheme$proxy_host$request_uri$http_accept_language;
}}}

I get the feeling that things are working, right now! If so, it only took 17½ month to find the solution...

In the mean time, bit rot has apparently degraded part of the language loading code because now that I have a working German setup, I notice that the key interface elements are not translated. I get a translated menu on the sidebar ("Übersicht, Letzte Änderundern, Neuigkeiten, ...") but the no translated keywords elsewhere ("Editing ... Summary ... Username ... Save Preview Cancel"). This, at least, looks like a far simpler problem to solve. Let's hope I'm right. :)

-- [http://alexschroeder.ch/wiki/Emacs Alex Schroeder] 2016-05-15 18:45 UTC

