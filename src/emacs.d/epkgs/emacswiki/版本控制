[[en:CategoryVersionControl]]
These are version control systems that interact with Emacs in a generic way.

* VersionControl, or VC, is the generic version control interface that comes with Emacs. It provides a consistent interface to interact with many different version control systems, including CVS, Subversion, Git, Mercurial, Bazaar, SCCS, CSSC and RCS.  This is a good choice if you use more than one system for revision control because of the *consistency* of its user interface.
** VcIcon displays an icon indicating the vc status of a file (up-to-date or modified with respect to the repository).
** VersionControlAlways
** VcTopDirectory automatically chdirs <code>vc-dir</code> buffer to top-level directory for git/Bazaar which list files with absolute paths
* DistributedVersionControl is an interface to various *distributed* version control systems.  It doesn't come with Emacs.  Currently DVC supports Git, Mercurial, Bazaar and GNU Arch. Monotone is only partially supported and Darcs support is not usable yet.

This is information on specific centralized version control systems.

* ConcurrentVersionsSystem -- CVS由VC默认支持
** PclCvs (##cvs-mode##) -- 提供CVS下的文件集结操作.
** CvsAdminMode -- 支持 ##CVSROOT/## 配置文件
* RevisionControlSystem -- RCS is supported by default in VC.
* SubVersion -- psvn.el is similar to pcl-cvs for CVS, but there is support for Subversion in VC.
** SvnMisc -- some functions to invoke subversion easily from emacs.
* [[SVK]] -- Two preliminary modes, vc-svk.el and a psvk.el are available.
** [[TortoiseSVN]] -- !TorotoiseSVN's front end.

This is information on specific distributed version control systems.

* AegisConfigurationManagement 
** AegisMode -- aegis-mode is available from Tim Potter.
* ArchVersionControl (and Bazaar) -- The suggested package is Xtla, but consider DVC and VC works, too.
* [[Bazaar]] (##bzr##) -- There are interfaces with and without VC support.
* DaRcs -- There's a VC backend available, a pcl-cvs like interface available, and a non-VC interface.
* [[Git]] -- Supported by VC, but git.el comes with the package and there are many other Git-specific modes.
* [[Mercurial]] (##hg##)
* MonoTone -- Partially supported by DVC, but a mode is distributed with Monotone.

This is information on Emacs interacting with proprietary version control systems.

* ClearCase -- Someone from Rational produced a mode, but a third-party VC backend is maintained.
* CmSynergy -- A minor mode exists
* PerforceSCM
* StarTeam
* Intersolv's PVCS – Stefan Braun wrote [Groups:pcvs.el&selm=sbn2bztolk.fsf@SB.i-have-a-misconfigured-system-so-shoot-me pvcs.el], based on Frederic Lepied's cvs.el. Alas, it does not work with PVCS 6.0.
* VisualSourceSafe
* [[MSTFS]] --  Microsoft Team Foundation System

External resources:

* [http://www.daveeaton.com/scm/ Software Configuration Management FAQ] for [news:comp.software.config-mgmt news:comp.software.config-mgmt]
* [http://dmoz.org/Computers/Software/Configuration_Management/Tools/ dmoz configuration management tools]
* [http://dmoz.org/Computers/Software/Configuration_Management/Tools/Revision_Control_System/ dmoz revision control systems]
* [[WikiPedia:Revision control]]
* [[WikiPedia:List of revision control software]]
* [http://revctrl.org Revctrl Wiki]
