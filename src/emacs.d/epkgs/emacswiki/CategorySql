[[ja:カテゴリ・SQL]]
[[es:CategoríaSQL]]
Click on the header to list all SQL related pages.

* SqlMode -- and here are the links to some related pages

** ComintPatched (comint.el) -- retrieve multi-line commands from the history of SQL statements
** ImenuMode -- has an example for SQL and PL/SQL support
** MasterMode (master-mode.el) -- remote control one buffer from another
** PlsqlMode -- support for writing PL/SQL code. This was inspired by the old and sadly unsupported Oracle PL/SQL mode.
** SqlBeautify
** SqlComplete -- experimental completion for columns and tables
** SqlCustomSession
** SqlEscapeCharacter
** SqlIndent (sql-indent.el) -- indentation of SQL statements
** SqlPlus -- Facilitates interaction with Oracle via SQL*Plus
** SqlPlusMode
** SqlPlusNukeLineNo -- get rid of the junk line numbers SQL*Plus emits
** SqlPreviousWhereClause
** SqlQueryBuffer -- open a connected ##sql-mode## buffer directly from ##sql-interactive-mode##
** SqlRenameBuffer -- renaming the buffer
** SqlReplace -- replace bind variables before sending a statement
** SqlSendHistory -- store SQL statements you sent from the SQL to the SQLi buffer in your history
** SqlSwitchBuffer -- switch-to-buffer instead of pop-to-buffer
** SqlTransform (sql-transform.el) -- transform select statements into update statements and more
** SqlUpcase (sql-upcase.el) -- automatically upcase SQL keywords
** SqlWithPlaceholders -- process SQL statements with placeholders embodied within them
** TsqlIndent

* OracleProC -- how to mix C and SQL
* OracleOnWindows -- things to keep in mind
* PostgreSQL -- a socket level interface for Emacs + more PostgreSQL-related things
* MySql -- a patch to Emacs on the C level
* [[mysql]] -- access mysql in emacs
* Lisp:sqlparser-mysql-complete.el completing tablename columnname ,need mysql-query.el
* Lisp:mysql-query.el executing sql for mysql
* Lisp:sqlparser-oracle-complete.el completing tablename columnname ,need oracle-query.el
* Lisp:oracle-query.el executing sql query using sqlplus (faster than oracle-shell-query.el)
* Lisp:sqlparser-sqlserver-complete.el -- completing tablename or column name when editing sql for  sqlserver2005 and later
* Lisp:sqlserver-query.el -- execute sql query using sqlcmd.exe or osql.exe * for sql server 
* Lisp:sqlserver-table2entity-4java.el -- generate entity for java from sqlserver tables [2011-09-27 14:26] 
* Lisp:sqlserver-table2entity-4csharp.el  -- generate entity for csharp from sqlserver tables [2011-09-27 14:26]  
* Lisp:mysql-table2entity-4java.el -- generate entity for java from mysql tables [2012-01-16 00:16] 
* Lisp:mysql-table2entity-4csharp.el  -- generate entity for csharp from mysql tables [2012-01-16 00:16]  
* Lisp:oracle-table2entity-4java.el  -- generate entity for java  from oracle tables [2011-09-27 14:26] 
* Lisp:oracle-table2entity-4csharp.el   -- generate entity for csharp from oracle tables [2011-09-27 14:26] 

* MySqlHelp -- alist and completion function for MySQL's `mysql' help facility e.g. mysql> help contents
* http://lispsql.sourceforge.net Mysql front-end for Emacs, access mysql without tying up your shell prompt, and many other useful mysql things.  
* PlsqlMode -- support for editing PL/SQL code
* SqlEdMode -- alternative support for editing PL/SQL code
* [[SQLite]] -- things for the sqlite database library
* ModeCompileSql -- a different approach for executing SQL scripts.
* [https://github.com/kiwanami/emacs-edbi EDBI] -- Emacs Database Interface. GUI and Database API.
* [https://github.com/nicferrier/emacs-sql-postgres sql-postgres] -- sql-mode add on for indenting Postgres' PlPgSQL, a PL/SQL variant
