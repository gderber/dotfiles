== Changing file associations from command line ==
To set up Emacs file associations properly, use the commands `ftype' and `assoc'


    ftype txtfile=emacsclientw -na runemacs "%1"
    ftype EmacsLisp=emacsclientw -na runemacs "%1"
    ftype CodeFile=emacsclientw -na runemacs "%1"
    assoc .txt=txtfile
    assoc .text=txtfile
    assoc .log=txtfile
    assoc .org=txtfile
    assoc .el=EmacsLisp
    assoc .c=CodeFile
    assoc .h=CodeFile


== Changing file associations with registry keys ==

This is similar to the "assoc" commands above.

by defining file "meta types", e.g., %%"EmacsFile"%%, and then hanging the file associations (e.g., ".foo") off of those:
<pre>
REGEDIT4
#-----
# Set up the handler and icon
#-----
[HKEY_CLASSES_ROOT\EmacsFile]
@="Emacs File"
"Content Type"="text/plain"

[HKEY_CLASSES_ROOT\EmacsFile\shell]
[HKEY_CLASSES_ROOT\EmacsFile\shell\open]
# This gets displayed in context menu
@="Open in Emacs"

[HKEY_CLASSES_ROOT\EmacsFile\shell\open\command]
@="C:\\Program Files\\Emacs\\bin\\runemacs.exe \"%1\""

[HKEY_CLASSES_ROOT\EmacsFile\DefaultIcon]
@="C:\\Program Files\\Emacs\\etc\\icons\\emacs.ico,0"
# Alternate
# @="C:\\Program Files\\Emacs\\bin\\runemacs.exe,0"

#-----
# Associate file types w/ Emacs
#-----
[HKEY_CLASSES_ROOT\.foo]
@="EmacsFile"
"Content Type"="text/plain"</pre>
</pre>
Note that this only takes effect after you restart your desktop Explorer instance, e.g., after rebooting or killing all 'explorer.exe' instances in Task Manager.




== Changing file associations in Windows Explorer ==

Instead of the above or editing the registry keys directly you can in Windows Explorer from the menus choose

  Tools - Folder Options

and then the tab "File Types".



== Make files with no extension be treated as text files ==

In the Command Prompt execute:

    ASSOC .=txtfile

If that doesn't work, then investigate the following registry keys. Possibly delete them and repeat the above step.

    HKEY_CLASSES_ROOT\.
    HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.

== Open text files with EMACS ==

In the Command Prompt execute, after adapting the path of EmacsClient:

    FTYPE txtfile="C:\Program Files\Emacs\bin\emacsclientw.exe" -n "%1"

== Other ramblings ==

: There are _many_ ways and places the verbs are stored.  HKEY_CLASSES_ROOT contains many of them (using various rules), but a few of the other places they may be found (according to my rummaging around) are:
:: <nowiki>[HKCU|HKLM]\Classes\Applications</nowiki>
:: <nowiki>[HKCU|HKLM]\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts</nowiki>
:: <nowiki>[HKCU|HKLM]\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder</nowiki>
:: <nowiki>[HKCU|HKLM]\Software\Microsoft\Windows\CurrentVersion\Explorer\AppKey</nowiki>
:: <nowiki>[HKCU|HKLM]\Software\Microsoft\Windows\CurrentVersion\Explorer\Associations</nowiki>
:: <nowiki>[HKCU|HKLM]\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\ContentTypeHandlers</nowiki>
::: ... it appears almost everything under ::<nowiki>[HKCU|HKLM]\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer may be playing a role...</nowiki>
:: <nowiki>[HKCU|HKLM]\Software\Microsoft\Windows\CurrentVersion\Extensions</nowiki>
:: <nowiki>[HKCU|HKLM]\Software\Microsoft\Windows NT\CurrentVersion\Extensions</nowiki>
:: they also may appear in .ini files (though not likely)

: <nowiki>Not all of the the right-click entries are 'verbs'.  I think they are called ShellExtensions, and might (i'm probably wrong) be accessible by using IContextMenu()::QueryContextMenu(), IContextMenu()::GetCommandString(), and IContextMenu()::InvokeCommand() [through some COM goo (which i don't understand)].</nowiki>

----
CategoryWThirtyTwo
