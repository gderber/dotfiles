#!/bin/bash

BLUE="[34;01m"
CYAN="[36;01m"
CYANN="[36m"
GREEN="[32;01m"
RED="[31;01m"
PURP="[35;01m"
OFF="[0m"

function getgpgkey () {
    local keyVal
    keyVal=$(gpg -K |
          awk '/sec/{if (length($2) > 0) print $2}' |
          sed 's|.*/0x||' )
    echo -ne ${keyVal}
}

function getsshkey () {
    local sshKeys
    local Keys

    cd ${HOME}/.ssh/ &&
        sshKeys=$(ls *.pub |
                      cut -d. -f1 |
                      cut -d- -f1 |
                      cut -d_ -f2 |
                      sort -u) &&
        cd ${HOME}

    for key in ${sshKeys}
    do
        if [[ "${key}" != "gpg" ]]; then
            if [[ -f ${HOME}/.ssh/id_${key} ]]; then
                if [[ -z ${Keys} ]]; then
                    Keys="id_${key}"
                else
                    Keys="${Keys} id_${key}"
                fi
                [[ "${key}" == "dsa" ]] &&
                    echo "Warning: you are still using dsa keys."
            fi
        fi
    done
    echo -ne ${Keys}

}

function gnome_agents () {
    eval $(gnome-keyring-daemon --start)
    export SSH_AUTH_SOCK
}

function keychain_agents () {
    local sshKeys
    local keyVal
    if command -v keychain > /dev/null 2>&1; then
        # ID GPG Keys
        keyVal=$(getgpgkey) &&
            [[ -n ${keyVal} ]] &&
            if [[ ! ${TERM} =~ screen ]]; then
                eval "$(keychain --clear --systemd --eval --agents gpg ${keyVal})"
                if [ -n "$GPG_AGENT_INFO" ]; then
                    unset SSH_AUTH_SOCK
                    SSH_AUTH_SOCK="${GPG_AGENT_INFO%%:*}.ssh"
                    if [ -e "$SSH_AUTH_SOCK" ]; then
                        export SSH_AUTH_SOCK
                    fi
                fi
            else
                eval "$(keychain --eval --agents gpg ${keyVal})"
            fi

        # ID SSH Keys
        sshKeys=$(getsshkey) &&
            [[ -n ${sshKeys} ]] &&
            if [[ ! ${TERM} =~ screen ]]; then
                eval "$(keychain --clear --eval --agents ssh ${sshKeys})"
            else
                eval "$(keychain --eval --agents ssh ${sshKeys})"
            fi
    fi
}

function start_agents () {
    if [[ -n "$DESKTOP_SESSION" ]]; then
        gnome_agents
    else
        keychain_agents
    fi
}

start_agents
