== How to Create an MS Windows Shortcut to Cygwin Emacs ==

One good reason to use Cygwin Emacs is that the Emacs shell can be `bash'.

The method described here creates a shortcut that will accept input by pasting or dragging a single file over the icon. The file name and the path may include space and quote characters. Unfortunately one can't have a list of files opened by dragging a multiple selection over the icon. However, once an Emacs window is already opened, one can open a selection of files by dragging them all over the already opened Emacs window. The setup requires roughly three steps.

# Copy the script (bottom of this page) to a file on your PC. I use ##C:\opt\bin\emacscw.sh##.

# Send a shortcut of program ##C:\cygwin\bin\run.exe## to the PC Desktop and rename the shortcut as you wish. I name the shortcut ##emacsCW.sh##. To create the shortcut navigate Explorer to directory ##C:\cygwin\bin## and right-click ##run.exe##; select ##Send to/Desktop##.

# Open the script in an editor and right-click the shortcut icon on the Desktop. Select ##Properties / Shortcut##. A this point cut and paste the ##Target## and ##Start in## fields from the script comment area to the corresponding parts of the ##Properties## mini-window.  Make sure to edit the content to reflect the actual names you use for the script name and the path. Click ##Apply## at the bottom-right of the Properties window.

=== SCRIPT ===

<pre>
#!/usr/bin/sh
set -o igncr
# file name: emacscw.sh
# context: Cygwin emacs on Windows 7.
# purpose: To launch Cygwin emacs.
# usage:   Called from a Cygwin\bin\run shortcut setup as follows.  The
#          shortcut can be pinned to the Start menu.
#   target:   C:\cygwin\bin\run.exe /usr/bin/bash --quote /cygdrive/c/opt/bin/emacscw.sh
#   Start in: %HOME%
if test "$1" = ""; then
    exec /usr/bin/emacs-w32;
else
    CPATH=$(/usr/bin/cygpath "$1")
    exec /usr/bin/emacs-w32 --file """$CPATH""";
fi
</pre>

----
[[Cygwin]]
CategoryWThirtyTwo
